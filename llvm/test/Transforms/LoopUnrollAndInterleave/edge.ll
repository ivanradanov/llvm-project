; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 3
; RUN: opt -passes=loop-unroll-and-interleave %s -S --luai-factor=2 | FileCheck %s
; RUN: opt -passes=loop-unroll-and-interleave %s -S --luai-factor=2 --luai-use-dynamic-convergence=1 | FileCheck %s --check-prefix=DRCHECK

; This file tests a couple of cases:
; 1. Values from the ws loop preheader used in DRs
; 2. Convergent flow joining a DR (from other than the DR entry)
; 3. DR containing blocks that dominate the DR Entry (and deifining values)

target datalayout = "e-p:64:64-p1:64:64-p2:32:32-p3:32:32-p4:64:64-p5:32:32-p6:32:32-p7:160:256:256:32-p8:128:128-i64:64-v16:16-v24:32-v32:32-v48:64-v96:128-v192:256-v256:256-v512:512-v1024:1024-v2048:2048-n32:64-S32-A5-G1-ni:7:8"
target triple = "amdgcn-amd-amdhsa"

%struct.ident_t = type { i32, i32, i32, i32, ptr }
%struct.DynamicEnvironmentTy = type { i16 }
%struct.KernelEnvironmentTy = type { %struct.ConfigurationEnvironmentTy, ptr, ptr }
%struct.ConfigurationEnvironmentTy = type { i8, i8, i8 }

@__omp_rtl_debug_kind = weak_odr hidden local_unnamed_addr addrspace(1) constant i32 0
@__omp_rtl_assume_teams_oversubscription = weak_odr hidden local_unnamed_addr addrspace(1) constant i32 0
@__omp_rtl_assume_threads_oversubscription = weak_odr hidden local_unnamed_addr addrspace(1) constant i32 0
@__omp_rtl_assume_no_thread_state = weak_odr hidden local_unnamed_addr addrspace(1) constant i32 0
@__omp_rtl_assume_no_nested_parallelism = weak_odr hidden local_unnamed_addr addrspace(1) constant i32 0
@0 = private unnamed_addr constant [76 x i8] c";main.cpp;__omp_offloading_58_208beb0__Z2gaPKcS0_Pcjiiii_l18_debug__;19;3;;\00", align 1
@1 = private unnamed_addr addrspace(1) constant %struct.ident_t { i32 0, i32 2, i32 0, i32 75, ptr @0 }, align 8
@__omp_offloading_58_208beb0__Z2gaPKcS0_Pcjiiii_l18_dynamic_environment = weak_odr protected addrspace(1) global %struct.DynamicEnvironmentTy zeroinitializer
@__omp_offloading_58_208beb0__Z2gaPKcS0_Pcjiiii_l18_kernel_environment = weak_odr protected addrspace(1) constant %struct.KernelEnvironmentTy { %struct.ConfigurationEnvironmentTy { i8 0, i8 0, i8 2 }, ptr addrspacecast (ptr addrspace(1) @1 to ptr), ptr addrspacecast (ptr addrspace(1) @__omp_offloading_58_208beb0__Z2gaPKcS0_Pcjiiii_l18_dynamic_environment to ptr) }
@2 = private unnamed_addr constant [20 x i8] c";main.cpp;ga;18;1;;\00", align 1
@3 = private unnamed_addr addrspace(1) constant %struct.ident_t { i32 0, i32 2050, i32 0, i32 19, ptr @2 }, align 8
@4 = private unnamed_addr addrspace(1) constant %struct.ident_t { i32 0, i32 514, i32 0, i32 19, ptr @2 }, align 8
@5 = private unnamed_addr constant [21 x i8] c";main.cpp;ga;18;67;;\00", align 1
@6 = private unnamed_addr addrspace(1) constant %struct.ident_t { i32 0, i32 2050, i32 0, i32 20, ptr @5 }, align 8
@7 = private unnamed_addr addrspace(1) constant %struct.ident_t { i32 0, i32 2, i32 0, i32 19, ptr @2 }, align 8
@8 = private unnamed_addr constant [62 x i8] c";main.cpp;__omp_offloading_58_208beb0_main_l83_debug__;84;7;;\00", align 1
@9 = private unnamed_addr addrspace(1) constant %struct.ident_t { i32 0, i32 2, i32 0, i32 61, ptr @8 }, align 8
@__omp_offloading_58_208beb0_main_l83_dynamic_environment = weak_odr protected addrspace(1) global %struct.DynamicEnvironmentTy zeroinitializer
@__omp_offloading_58_208beb0_main_l83_kernel_environment = weak_odr protected addrspace(1) constant %struct.KernelEnvironmentTy { %struct.ConfigurationEnvironmentTy { i8 0, i8 0, i8 2 }, ptr addrspacecast (ptr addrspace(1) @9 to ptr), ptr addrspacecast (ptr addrspace(1) @__omp_offloading_58_208beb0_main_l83_dynamic_environment to ptr) }
@10 = private unnamed_addr constant [22 x i8] c";main.cpp;main;83;1;;\00", align 1
@11 = private unnamed_addr addrspace(1) constant %struct.ident_t { i32 0, i32 2050, i32 0, i32 21, ptr @10 }, align 8
@12 = private unnamed_addr addrspace(1) constant %struct.ident_t { i32 0, i32 514, i32 0, i32 21, ptr @10 }, align 8
@13 = private unnamed_addr constant [23 x i8] c";main.cpp;main;83;67;;\00", align 1
@14 = private unnamed_addr addrspace(1) constant %struct.ident_t { i32 0, i32 2050, i32 0, i32 22, ptr @13 }, align 8
@15 = private unnamed_addr addrspace(1) constant %struct.ident_t { i32 0, i32 2, i32 0, i32 21, ptr @10 }, align 8
@llvm.amdgcn.abi.version = weak_odr hidden local_unnamed_addr addrspace(4) constant i32 400

declare i32 @__kmpc_target_init(ptr) local_unnamed_addr

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p5(i64 immarg, ptr addrspace(5) nocapture) #0

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p5(i64 immarg, ptr addrspace(5) nocapture) #0

; Function Attrs: nounwind
declare i32 @__kmpc_get_hardware_num_threads_in_block() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @__kmpc_distribute_static_init_4u(ptr, i32, i32, ptr nocapture nofree, ptr nocapture nofree, ptr nocapture nofree, ptr nocapture nofree, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @__kmpc_for_static_init_4u(ptr, i32, i32, ptr nocapture nofree, ptr nocapture nofree, ptr nocapture nofree, ptr nocapture nofree, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @__kmpc_distribute_static_fini(ptr, i32) local_unnamed_addr #1

; Function Attrs: alwaysinline norecurse nounwind
define internal void @__omp_offloading_58_208beb0__Z2gaPKcS0_Pcjiiii_l18_debug___omp_outlined_debug___omp_outlined(ptr noalias nocapture noundef readonly %.global_tid., ptr noalias nocapture readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., i64 noundef %length, i64 noundef %query_sequence_length, i64 noundef %coarse_match_length, ptr nocapture noundef readonly %target, i64 noundef %current_position, ptr nocapture noundef readonly %query, i64 noundef %coarse_match_threshold, ptr nocapture noundef writeonly %batch_result) #2 {
; CHECK-LABEL: define internal void @__omp_offloading_58_208beb0__Z2gaPKcS0_Pcjiiii_l18_debug___omp_outlined_debug___omp_outlined(
; CHECK-SAME: ptr noalias nocapture noundef readonly [[DOTGLOBAL_TID_:%.*]], ptr noalias nocapture readnone [[DOTBOUND_TID_:%.*]], i64 noundef [[DOTPREVIOUS_LB_:%.*]], i64 noundef [[DOTPREVIOUS_UB_:%.*]], i64 noundef [[LENGTH:%.*]], i64 noundef [[QUERY_SEQUENCE_LENGTH:%.*]], i64 noundef [[COARSE_MATCH_LENGTH:%.*]], ptr nocapture noundef readonly [[TARGET:%.*]], i64 noundef [[CURRENT_POSITION:%.*]], ptr nocapture noundef readonly [[QUERY:%.*]], i64 noundef [[COARSE_MATCH_THRESHOLD:%.*]], ptr nocapture noundef writeonly [[BATCH_RESULT:%.*]]) #[[ATTR2:[0-9]+]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[DOTOMP_LB_I:%.*]] = alloca i32, align 4, addrspace(5)
; CHECK-NEXT:    [[DOTOMP_UB_I:%.*]] = alloca i32, align 4, addrspace(5)
; CHECK-NEXT:    [[DOTOMP_STRIDE_I:%.*]] = alloca i32, align 4, addrspace(5)
; CHECK-NEXT:    [[DOTOMP_IS_LAST_I:%.*]] = alloca i32, align 4, addrspace(5)
; CHECK-NEXT:    [[QUERY_SEQUENCE_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC:%.*]] = trunc i64 [[QUERY_SEQUENCE_LENGTH]] to i32
; CHECK-NEXT:    [[COARSE_MATCH_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC:%.*]] = trunc i64 [[COARSE_MATCH_LENGTH]] to i32
; CHECK-NEXT:    [[CURRENT_POSITION_ADDR_SROA_0_0_EXTRACT_TRUNC:%.*]] = trunc i64 [[CURRENT_POSITION]] to i32
; CHECK-NEXT:    [[COARSE_MATCH_THRESHOLD_ADDR_SROA_0_0_EXTRACT_TRUNC:%.*]] = trunc i64 [[COARSE_MATCH_THRESHOLD]] to i32
; CHECK-NEXT:    tail call void @llvm.experimental.noalias.scope.decl(metadata [[META14:![0-9]+]])
; CHECK-NEXT:    [[TMP0:%.*]] = and i64 [[LENGTH]], 4294967295
; CHECK-NEXT:    [[CMP_NOT_I:%.*]] = icmp eq i64 [[TMP0]], 0
; CHECK-NEXT:    br i1 [[CMP_NOT_I]], label [[__OMP_OFFLOADING_58_208BEB0__Z2GAPKCS0_PCJIIII_L18_DEBUG___OMP_OUTLINED_DEBUG___OMP_OUTLINED_DEBUG___EXIT:%.*]], label [[OMP_PRECOND_THEN_I:%.*]]
; CHECK:       omp.precond.then.i:
; CHECK-NEXT:    [[DOTOMP_STRIDE_ASCAST_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_STRIDE_I]] to ptr
; CHECK-NEXT:    [[DOTOMP_IS_LAST_ASCAST_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_IS_LAST_I]] to ptr
; CHECK-NEXT:    [[DOTOMP_UB_ASCAST_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_UB_I]] to ptr
; CHECK-NEXT:    [[DOTOMP_LB_ASCAST_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_LB_I]] to ptr
; CHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_LB_I]]) #[[ATTR7:[0-9]+]], !noalias [[META14]]
; CHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_UB_I]]) #[[ATTR7]], !noalias [[META14]]
; CHECK-NEXT:    [[CONV_I:%.*]] = trunc i64 [[DOTPREVIOUS_LB_]] to i32
; CHECK-NEXT:    [[CONV3_I:%.*]] = trunc i64 [[DOTPREVIOUS_UB_]] to i32
; CHECK-NEXT:    store i32 [[CONV_I]], ptr addrspace(5) [[DOTOMP_LB_I]], align 4, !tbaa [[TBAA17:![0-9]+]], !noalias [[META14]]
; CHECK-NEXT:    store i32 [[CONV3_I]], ptr addrspace(5) [[DOTOMP_UB_I]], align 4, !tbaa [[TBAA17]], !noalias [[META14]]
; CHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_STRIDE_I]]) #[[ATTR7]], !noalias [[META14]]
; CHECK-NEXT:    store i32 1, ptr addrspace(5) [[DOTOMP_STRIDE_I]], align 4, !tbaa [[TBAA17]], !noalias [[META14]]
; CHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_IS_LAST_I]]) #[[ATTR7]], !noalias [[META14]]
; CHECK-NEXT:    store i32 0, ptr addrspace(5) [[DOTOMP_IS_LAST_I]], align 4, !tbaa [[TBAA17]], !noalias [[META14]]
; CHECK-NEXT:    [[TMP1:%.*]] = load i32, ptr [[DOTGLOBAL_TID_]], align 4, !tbaa [[TBAA17]], !alias.scope [[META14]]
; CHECK-NEXT:    call void @__kmpc_for_static_init_4u(ptr addrspacecast (ptr addrspace(1) @[[GLOB4:[0-9]+]] to ptr), i32 [[TMP1]], i32 33, ptr nocapture nonnull [[DOTOMP_IS_LAST_ASCAST_I]], ptr nocapture nonnull [[DOTOMP_LB_ASCAST_I]], ptr nocapture nonnull [[DOTOMP_UB_ASCAST_I]], ptr nocapture nonnull [[DOTOMP_STRIDE_ASCAST_I]], i32 1, i32 1) #[[ATTR1:[0-9]+]], !noalias [[META14]]
; CHECK-NEXT:    [[TMP2:%.*]] = load i32, ptr addrspace(5) [[DOTOMP_LB_I]], align 4, !tbaa [[TBAA17]], !noalias [[META14]]
; CHECK-NEXT:    [[CONV5_I:%.*]] = add i32 [[CONV3_I]], 1
; CHECK-NEXT:    [[CMP66_I:%.*]] = icmp ult i32 [[TMP2]], [[CONV5_I]]
; CHECK-NEXT:    br i1 [[CMP66_I]], label [[OMP_INNER_FOR_BODY_LR_PH_I:%.*]], label [[OMP_LOOP_EXIT_I:%.*]]
; CHECK:       omp.inner.for.body.lr.ph.i:
; CHECK-NEXT:    [[CMP9_NOT_NOT4_I:%.*]] = icmp slt i32 [[QUERY_SEQUENCE_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]], [[COARSE_MATCH_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; CHECK-NEXT:    [[CMP111_I:%.*]] = icmp sgt i32 [[COARSE_MATCH_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]], 0
; CHECK-NEXT:    [[TMP3:%.*]] = load i32, ptr addrspace(5) [[DOTOMP_STRIDE_I]], align 4, !tbaa [[TBAA17]], !noalias [[META14]]
; CHECK-NEXT:    [[TMP4:%.*]] = add i32 [[QUERY_SEQUENCE_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]], 1
; CHECK-NEXT:    [[TMP5:%.*]] = sub i32 [[TMP4]], [[COARSE_MATCH_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; CHECK-NEXT:    [[INITIAL_IV_COARSENED_1:%.*]] = add i32 [[TMP2]], [[TMP3]]
; CHECK-NEXT:    [[COARSENED_STEP:%.*]] = mul i32 [[TMP3]], 2
; CHECK-NEXT:    [[TMP6:%.*]] = sub i32 [[CONV5_I]], [[TMP2]]
; CHECK-NEXT:    [[TMP7:%.*]] = add i32 [[TMP6]], [[TMP3]]
; CHECK-NEXT:    [[TMP8:%.*]] = sub i32 [[TMP7]], 1
; CHECK-NEXT:    [[TMP9:%.*]] = udiv i32 [[TMP8]], [[TMP3]]
; CHECK-NEXT:    [[TMP10:%.*]] = udiv i32 [[TMP9]], 2
; CHECK-NEXT:    [[TMP11:%.*]] = mul nsw i32 [[TMP10]], 2
; CHECK-NEXT:    [[TMP12:%.*]] = mul nsw i32 [[TMP11]], [[TMP3]]
; CHECK-NEXT:    [[EPILOGUE_START_IV:%.*]] = add i32 [[TMP12]], [[TMP2]]
; CHECK-NEXT:    [[IS_EPILOGUE_START:%.*]] = icmp eq i32 [[TMP2]], [[EPILOGUE_START_IV]]
; CHECK-NEXT:    br i1 [[IS_EPILOGUE_START]], label [[OMP_INNER_FOR_BODY_I_EPILOGUE:%.*]], label [[OMP_INNER_FOR_BODY_I:%.*]]
; CHECK:       omp.inner.for.body.i:
; CHECK-NEXT:    [[DOTOMP_IV_07_I:%.*]] = phi i32 [ [[TMP2]], [[OMP_INNER_FOR_BODY_LR_PH_I]] ], [ [[TMP15:%.*]], [[IF_END33_I:%.*]] ]
; CHECK-NEXT:    [[DOTOMP_IV_07_I_COARSENED_1:%.*]] = phi i32 [ [[INITIAL_IV_COARSENED_1]], [[OMP_INNER_FOR_BODY_LR_PH_I]] ], [ [[DOTCOARSENED_13:%.*]], [[IF_END33_I]] ]
; CHECK-NEXT:    br i1 [[CMP9_NOT_NOT4_I]], label [[IF_END33_I_DIVERGENT_EXIT:%.*]], label [[FOR_COND10_PREHEADER_LR_PH_I:%.*]]
; CHECK:       for.cond10.preheader.lr.ph.i:
; CHECK-NEXT:    [[ADD14_I:%.*]] = add i32 [[DOTOMP_IV_07_I]], [[CURRENT_POSITION_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; CHECK-NEXT:    [[ADD14_I_COARSENED_1:%.*]] = add i32 [[DOTOMP_IV_07_I_COARSENED_1]], [[CURRENT_POSITION_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; CHECK-NEXT:    br label [[FOR_COND10_PREHEADER_I:%.*]]
; CHECK:       for.cond10.preheader.i:
; CHECK-NEXT:    br i1 [[CMP111_I]], label [[FOR_BODY13_I_PREHEADER:%.*]], label [[FOR_COND_CLEANUP12_I:%.*]]
; CHECK:       for.body13.i.preheader:
; CHECK-NEXT:    br label [[FOR_BODY13_I:%.*]]
; CHECK:       for.cond.cleanup12.i.loopexit:
; CHECK-NEXT:    [[SPEC_SELECT_I_LCSSA:%.*]] = phi i32 [ [[SPEC_SELECT_I:%.*]], [[FOR_BODY13_I]] ]
; CHECK-NEXT:    [[SPEC_SELECT_I_LCSSA_COARSENED_1:%.*]] = phi i32 [ [[SPEC_SELECT_I_COARSENED_1:%.*]], [[FOR_BODY13_I]] ]
; CHECK-NEXT:    br label [[FOR_COND_CLEANUP12_I]]
; CHECK:       for.cond.cleanup12.i:
; CHECK-NEXT:    [[DISTANCE_0_LCSSA_I:%.*]] = phi i32 [ 0, [[FOR_COND10_PREHEADER_I]] ], [ [[SPEC_SELECT_I_LCSSA]], [[FOR_COND_CLEANUP12_I_LOOPEXIT:%.*]] ]
; CHECK-NEXT:    [[DISTANCE_0_LCSSA_I_COARSENED_1:%.*]] = phi i32 [ 0, [[FOR_COND10_PREHEADER_I]] ], [ [[SPEC_SELECT_I_LCSSA_COARSENED_1]], [[FOR_COND_CLEANUP12_I_LOOPEXIT]] ]
; CHECK-NEXT:    [[CMP23_NOT_I:%.*]] = icmp slt i32 [[DISTANCE_0_LCSSA_I]], [[COARSE_MATCH_THRESHOLD_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; CHECK-NEXT:    [[CMP23_NOT_I_COARSENED_1:%.*]] = icmp slt i32 [[DISTANCE_0_LCSSA_I_COARSENED_1]], [[COARSE_MATCH_THRESHOLD_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; CHECK-NEXT:    br label [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_0:%.*]]
; CHECK:       for.body13.i:
; CHECK-NEXT:    [[J_03_I:%.*]] = phi i32 [ [[INC22_I:%.*]], [[FOR_BODY13_I]] ], [ 0, [[FOR_BODY13_I_PREHEADER]] ]
; CHECK-NEXT:    [[J_03_I_COARSENED_1:%.*]] = phi i32 [ [[INC22_I_COARSENED_1:%.*]], [[FOR_BODY13_I]] ], [ 0, [[FOR_BODY13_I_PREHEADER]] ]
; CHECK-NEXT:    [[DISTANCE_02_I:%.*]] = phi i32 [ [[SPEC_SELECT_I]], [[FOR_BODY13_I]] ], [ 0, [[FOR_BODY13_I_PREHEADER]] ]
; CHECK-NEXT:    [[DISTANCE_02_I_COARSENED_1:%.*]] = phi i32 [ [[SPEC_SELECT_I_COARSENED_1]], [[FOR_BODY13_I]] ], [ 0, [[FOR_BODY13_I_PREHEADER]] ]
; CHECK-NEXT:    [[ADD15_I:%.*]] = add i32 [[ADD14_I]], [[J_03_I]]
; CHECK-NEXT:    [[ADD15_I_COARSENED_1:%.*]] = add i32 [[ADD14_I_COARSENED_1]], [[J_03_I_COARSENED_1]]
; CHECK-NEXT:    [[IDXPROM_I:%.*]] = zext i32 [[ADD15_I]] to i64
; CHECK-NEXT:    [[IDXPROM_I_COARSENED_1:%.*]] = zext i32 [[ADD15_I_COARSENED_1]] to i64
; CHECK-NEXT:    [[ARRAYIDX_I:%.*]] = getelementptr inbounds i8, ptr [[TARGET]], i64 [[IDXPROM_I]]
; CHECK-NEXT:    [[ARRAYIDX_I_COARSENED_1:%.*]] = getelementptr inbounds i8, ptr [[TARGET]], i64 [[IDXPROM_I_COARSENED_1]]
; CHECK-NEXT:    [[TMP13:%.*]] = load i8, ptr [[ARRAYIDX_I]], align 1, !tbaa [[TBAA21:![0-9]+]], !noalias [[META14]]
; CHECK-NEXT:    [[DOTCOARSENED_1:%.*]] = load i8, ptr [[ARRAYIDX_I_COARSENED_1]], align 1, !tbaa [[TBAA21]], !noalias [[META14]]
; CHECK-NEXT:    [[ADD17_I:%.*]] = add nuw nsw i32 [[J_03_I]], 0
; CHECK-NEXT:    [[ADD17_I_COARSENED_1:%.*]] = add nuw nsw i32 [[J_03_I_COARSENED_1]], 0
; CHECK-NEXT:    [[IDXPROM18_I:%.*]] = zext i32 [[ADD17_I]] to i64
; CHECK-NEXT:    [[IDXPROM18_I_COARSENED_1:%.*]] = zext i32 [[ADD17_I_COARSENED_1]] to i64
; CHECK-NEXT:    [[ARRAYIDX19_I:%.*]] = getelementptr inbounds i8, ptr [[QUERY]], i64 [[IDXPROM18_I]]
; CHECK-NEXT:    [[ARRAYIDX19_I_COARSENED_1:%.*]] = getelementptr inbounds i8, ptr [[QUERY]], i64 [[IDXPROM18_I_COARSENED_1]]
; CHECK-NEXT:    [[TMP14:%.*]] = load i8, ptr [[ARRAYIDX19_I]], align 1, !tbaa [[TBAA21]], !noalias [[META14]]
; CHECK-NEXT:    [[DOTCOARSENED_12:%.*]] = load i8, ptr [[ARRAYIDX19_I_COARSENED_1]], align 1, !tbaa [[TBAA21]], !noalias [[META14]]
; CHECK-NEXT:    [[CMP21_NOT_I:%.*]] = icmp ne i8 [[TMP13]], [[TMP14]]
; CHECK-NEXT:    [[CMP21_NOT_I_COARSENED_1:%.*]] = icmp ne i8 [[DOTCOARSENED_1]], [[DOTCOARSENED_12]]
; CHECK-NEXT:    [[INC_I:%.*]] = zext i1 [[CMP21_NOT_I]] to i32
; CHECK-NEXT:    [[INC_I_COARSENED_1:%.*]] = zext i1 [[CMP21_NOT_I_COARSENED_1]] to i32
; CHECK-NEXT:    [[SPEC_SELECT_I]] = add nuw nsw i32 [[DISTANCE_02_I]], [[INC_I]]
; CHECK-NEXT:    [[SPEC_SELECT_I_COARSENED_1]] = add nuw nsw i32 [[DISTANCE_02_I_COARSENED_1]], [[INC_I_COARSENED_1]]
; CHECK-NEXT:    [[INC22_I]] = add nuw nsw i32 [[J_03_I]], 1
; CHECK-NEXT:    [[INC22_I_COARSENED_1]] = add nuw nsw i32 [[J_03_I_COARSENED_1]], 1
; CHECK-NEXT:    [[EXITCOND_NOT_I:%.*]] = icmp eq i32 [[INC22_I]], [[COARSE_MATCH_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; CHECK-NEXT:    [[EXITCOND_NOT_I_COARSENED_1:%.*]] = icmp eq i32 [[INC22_I_COARSENED_1]], [[COARSE_MATCH_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; CHECK-NEXT:    br i1 [[EXITCOND_NOT_I]], label [[FOR_COND_CLEANUP12_I_LOOPEXIT]], label [[FOR_BODY13_I]], !llvm.loop [[LOOP22:![0-9]+]]
; CHECK:       if.end33.i.divergent.exit:
; CHECK-NEXT:    br label [[IF_END33_I]]
; CHECK:       if.end33.i:
; CHECK-NEXT:    [[TMP15]] = add i32 [[DOTOMP_IV_07_I]], [[COARSENED_STEP]]
; CHECK-NEXT:    [[DOTCOARSENED_13]] = add i32 [[DOTOMP_IV_07_I_COARSENED_1]], [[COARSENED_STEP]]
; CHECK-NEXT:    [[ADD34_I:%.*]] = add i32 [[DOTOMP_IV_07_I]], [[TMP3]]
; CHECK-NEXT:    [[ADD34_I_COARSENED_1:%.*]] = add i32 [[DOTOMP_IV_07_I_COARSENED_1]], [[TMP3]]
; CHECK-NEXT:    [[TMP16:%.*]] = icmp ult i32 [[TMP15]], [[CONV5_I]]
; CHECK-NEXT:    [[DOTCOARSENED_14:%.*]] = icmp ult i32 [[DOTCOARSENED_13]], [[CONV5_I]]
; CHECK-NEXT:    [[CMP6_I:%.*]] = icmp ult i32 [[ADD34_I]], [[CONV5_I]]
; CHECK-NEXT:    [[CMP6_I_COARSENED_1:%.*]] = icmp ult i32 [[ADD34_I_COARSENED_1]], [[CONV5_I]]
; CHECK-NEXT:    [[IS_EPILOGUE_START1:%.*]] = icmp eq i32 [[TMP15]], [[EPILOGUE_START_IV]]
; CHECK-NEXT:    [[IS_EPILOGUE_START1_COARSENED_1:%.*]] = icmp eq i32 [[DOTCOARSENED_13]], [[EPILOGUE_START_IV]]
; CHECK-NEXT:    br i1 [[IS_EPILOGUE_START1]], label [[COARSENED_END_CHECK:%.*]], label [[OMP_INNER_FOR_BODY_I]], !llvm.loop [[LOOP24:![0-9]+]]
; CHECK:       for.cond.i.drs.0:
; CHECK-NEXT:    [[INC27_I_DRS_0:%.*]] = add nuw i32 [[I_05_I_DRS_0_REG2MEM_0:%.*]], 1
; CHECK-NEXT:    [[EXITCOND9_NOT_I_DRS_0:%.*]] = icmp eq i32 [[INC27_I_DRS_0]], [[TMP5]]
; CHECK-NEXT:    br i1 [[EXITCOND9_NOT_I_DRS_0]], label [[IF_END33_I_LOOPEXIT_DRS_0:%.*]], label [[FOR_COND10_PREHEADER_I_DRS_0:%.*]], !llvm.loop [[LOOP26:![0-9]+]]
; CHECK:       for.cond10.preheader.i.drs.0:
; CHECK-NEXT:    br i1 [[CMP111_I]], label [[FOR_BODY13_I_PREHEADER_DRS_0:%.*]], label [[FOR_COND_CLEANUP12_I_DRS_0:%.*]]
; CHECK:       for.body13.i.preheader.drs.0:
; CHECK-NEXT:    br label [[FOR_BODY13_I_DRS_0:%.*]]
; CHECK:       for.cond.cleanup12.i.loopexit.drs.0:
; CHECK-NEXT:    [[SPEC_SELECT_I_LCSSA_DRS_0:%.*]] = phi i32 [ [[SPEC_SELECT_I_DRS_0:%.*]], [[FOR_BODY13_I_DRS_0]] ]
; CHECK-NEXT:    br label [[FOR_COND_CLEANUP12_I_DRS_0]]
; CHECK:       for.cond.cleanup12.i.drs.0:
; CHECK-NEXT:    [[DISTANCE_0_LCSSA_I_DRS_0:%.*]] = phi i32 [ 0, [[FOR_COND10_PREHEADER_I_DRS_0]] ], [ [[SPEC_SELECT_I_LCSSA_DRS_0]], [[FOR_COND_CLEANUP12_I_LOOPEXIT_DRS_0:%.*]] ]
; CHECK-NEXT:    [[CMP23_NOT_I_DRS_0:%.*]] = icmp slt i32 [[DISTANCE_0_LCSSA_I_DRS_0]], [[COARSE_MATCH_THRESHOLD_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; CHECK-NEXT:    br label [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0:%.*]]
; CHECK:       for.cond.cleanup12.i.divergent.entry.drs.0.intro.0:
; CHECK-NEXT:    br label [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0]]
; CHECK:       for.cond.cleanup12.i.divergent.entry.drs.0.intro.1:
; CHECK-NEXT:    br label [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0]]
; CHECK:       for.cond.cleanup12.i.divergent.entry.drs.0:
; CHECK-NEXT:    [[DR_COARSENED_IDENT_0:%.*]] = phi i32 [ 0, [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_0]] ], [ 1, [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_1:%.*]] ], [ [[DR_COARSENED_IDENT_0]], [[FOR_COND_CLEANUP12_I_DRS_0]] ]
; CHECK-NEXT:    [[DOTOMP_IV_07_I_DRS_0_REG2MEM_0:%.*]] = phi i32 [ [[DOTOMP_IV_07_I]], [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_0]] ], [ [[DOTOMP_IV_07_I_COARSENED_1]], [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_1]] ], [ [[DOTOMP_IV_07_I_DRS_0_REG2MEM_0]], [[FOR_COND_CLEANUP12_I_DRS_0]] ]
; CHECK-NEXT:    [[CMP23_NOT_I_DRS_0_REG2MEM_0:%.*]] = phi i1 [ [[CMP23_NOT_I]], [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_0]] ], [ [[CMP23_NOT_I_COARSENED_1]], [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_1]] ], [ [[CMP23_NOT_I_DRS_0]], [[FOR_COND_CLEANUP12_I_DRS_0]] ]
; CHECK-NEXT:    [[ADD14_I_DRS_0_REG2MEM_0:%.*]] = phi i32 [ [[ADD14_I]], [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_0]] ], [ [[ADD14_I_COARSENED_1]], [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_1]] ], [ [[ADD14_I_DRS_0_REG2MEM_0]], [[FOR_COND_CLEANUP12_I_DRS_0]] ]
; CHECK-NEXT:    [[I_05_I_DRS_0_REG2MEM_0]] = phi i32 [ 0, [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_0]] ], [ 0, [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_1]] ], [ [[INC27_I_DRS_0]], [[FOR_COND_CLEANUP12_I_DRS_0]] ]
; CHECK-NEXT:    br i1 [[CMP23_NOT_I_DRS_0_REG2MEM_0]], label [[CLEANUP28_I_DRS_0:%.*]], label [[FOR_COND_I_DRS_0:%.*]]
; CHECK:       for.body13.i.drs.0:
; CHECK-NEXT:    [[J_03_I_DRS_0:%.*]] = phi i32 [ [[INC22_I_DRS_0:%.*]], [[FOR_BODY13_I_DRS_0]] ], [ 0, [[FOR_BODY13_I_PREHEADER_DRS_0]] ]
; CHECK-NEXT:    [[DISTANCE_02_I_DRS_0:%.*]] = phi i32 [ [[SPEC_SELECT_I_DRS_0]], [[FOR_BODY13_I_DRS_0]] ], [ 0, [[FOR_BODY13_I_PREHEADER_DRS_0]] ]
; CHECK-NEXT:    [[ADD15_I_DRS_0:%.*]] = add i32 [[ADD14_I_DRS_0_REG2MEM_0]], [[J_03_I_DRS_0]]
; CHECK-NEXT:    [[IDXPROM_I_DRS_0:%.*]] = zext i32 [[ADD15_I_DRS_0]] to i64
; CHECK-NEXT:    [[ARRAYIDX_I_DRS_0:%.*]] = getelementptr inbounds i8, ptr [[TARGET]], i64 [[IDXPROM_I_DRS_0]]
; CHECK-NEXT:    [[TMP17:%.*]] = load i8, ptr [[ARRAYIDX_I_DRS_0]], align 1, !tbaa [[TBAA21]], !noalias [[META14]]
; CHECK-NEXT:    [[ADD17_I_DRS_0:%.*]] = add nuw nsw i32 [[J_03_I_DRS_0]], [[INC27_I_DRS_0]]
; CHECK-NEXT:    [[IDXPROM18_I_DRS_0:%.*]] = zext i32 [[ADD17_I_DRS_0]] to i64
; CHECK-NEXT:    [[ARRAYIDX19_I_DRS_0:%.*]] = getelementptr inbounds i8, ptr [[QUERY]], i64 [[IDXPROM18_I_DRS_0]]
; CHECK-NEXT:    [[TMP18:%.*]] = load i8, ptr [[ARRAYIDX19_I_DRS_0]], align 1, !tbaa [[TBAA21]], !noalias [[META14]]
; CHECK-NEXT:    [[CMP21_NOT_I_DRS_0:%.*]] = icmp ne i8 [[TMP17]], [[TMP18]]
; CHECK-NEXT:    [[INC_I_DRS_0:%.*]] = zext i1 [[CMP21_NOT_I_DRS_0]] to i32
; CHECK-NEXT:    [[SPEC_SELECT_I_DRS_0]] = add nuw nsw i32 [[DISTANCE_02_I_DRS_0]], [[INC_I_DRS_0]]
; CHECK-NEXT:    [[INC22_I_DRS_0]] = add nuw nsw i32 [[J_03_I_DRS_0]], 1
; CHECK-NEXT:    [[EXITCOND_NOT_I_DRS_0:%.*]] = icmp eq i32 [[INC22_I_DRS_0]], [[COARSE_MATCH_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; CHECK-NEXT:    br i1 [[EXITCOND_NOT_I_DRS_0]], label [[FOR_COND_CLEANUP12_I_LOOPEXIT_DRS_0]], label [[FOR_BODY13_I_DRS_0]], !llvm.loop [[LOOP22]]
; CHECK:       cleanup28.i.drs.0:
; CHECK-NEXT:    [[IDXPROM31_I_DRS_0:%.*]] = zext i32 [[DOTOMP_IV_07_I_DRS_0_REG2MEM_0]] to i64
; CHECK-NEXT:    [[ARRAYIDX32_I_DRS_0:%.*]] = getelementptr inbounds i8, ptr [[BATCH_RESULT]], i64 [[IDXPROM31_I_DRS_0]]
; CHECK-NEXT:    store i8 1, ptr [[ARRAYIDX32_I_DRS_0]], align 1, !tbaa [[TBAA21]], !noalias [[META14]]
; CHECK-NEXT:    br label [[IF_END33_I_DIVERGENT_EXIT_DRS_0:%.*]]
; CHECK:       if.end33.i.loopexit.drs.0:
; CHECK-NEXT:    br label [[IF_END33_I_DIVERGENT_EXIT_DRS_0]]
; CHECK:       if.end33.i.divergent.exit.drs.0:
; CHECK-NEXT:    switch i32 [[DR_COARSENED_IDENT_0]], label [[IF_END33_I_DIVERGENT_EXIT_DRS_0_OUTRO_0:%.*]] [
; CHECK-NEXT:      i32 1, label [[IF_END33_I_DIVERGENT_EXIT_DRS_0_OUTRO_1:%.*]]
; CHECK-NEXT:    ]
; CHECK:       if.end33.i.divergent.exit.drs.0.outro.0:
; CHECK-NEXT:    br label [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_1]]
; CHECK:       if.end33.i.divergent.exit.drs.0.outro.1:
; CHECK-NEXT:    br label [[IF_END33_I]]
; CHECK:       coarsened.end.check:
; CHECK-NEXT:    br i1 [[TMP16]], label [[OMP_INNER_FOR_BODY_I_EPILOGUE]], label [[OMP_LOOP_EXIT_I_LOOPEXIT:%.*]]
; CHECK:       omp.inner.for.body.i.epilogue:
; CHECK-NEXT:    [[DOTOMP_IV_07_I_EPILOGUE:%.*]] = phi i32 [ [[TMP15]], [[COARSENED_END_CHECK]] ], [ [[ADD34_I_EPILOGUE:%.*]], [[IF_END33_I_EPILOGUE:%.*]] ], [ [[TMP2]], [[OMP_INNER_FOR_BODY_LR_PH_I]] ]
; CHECK-NEXT:    br i1 [[CMP9_NOT_NOT4_I]], label [[IF_END33_I_EPILOGUE]], label [[FOR_COND10_PREHEADER_LR_PH_I_EPILOGUE:%.*]]
; CHECK:       for.cond10.preheader.lr.ph.i.epilogue:
; CHECK-NEXT:    [[ADD14_I_EPILOGUE:%.*]] = add i32 [[DOTOMP_IV_07_I_EPILOGUE]], [[CURRENT_POSITION_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; CHECK-NEXT:    br label [[FOR_COND10_PREHEADER_I_EPILOGUE:%.*]]
; CHECK:       for.cond10.preheader.i.epilogue:
; CHECK-NEXT:    [[I_05_I_EPILOGUE:%.*]] = phi i32 [ 0, [[FOR_COND10_PREHEADER_LR_PH_I_EPILOGUE]] ], [ [[INC27_I_EPILOGUE:%.*]], [[FOR_COND_I_EPILOGUE:%.*]] ]
; CHECK-NEXT:    br i1 [[CMP111_I]], label [[FOR_BODY13_I_PREHEADER_EPILOGUE:%.*]], label [[FOR_COND_CLEANUP12_I_EPILOGUE:%.*]]
; CHECK:       for.body13.i.preheader.epilogue:
; CHECK-NEXT:    br label [[FOR_BODY13_I_EPILOGUE:%.*]]
; CHECK:       for.body13.i.epilogue:
; CHECK-NEXT:    [[J_03_I_EPILOGUE:%.*]] = phi i32 [ [[INC22_I_EPILOGUE:%.*]], [[FOR_BODY13_I_EPILOGUE]] ], [ 0, [[FOR_BODY13_I_PREHEADER_EPILOGUE]] ]
; CHECK-NEXT:    [[DISTANCE_02_I_EPILOGUE:%.*]] = phi i32 [ [[SPEC_SELECT_I_EPILOGUE:%.*]], [[FOR_BODY13_I_EPILOGUE]] ], [ 0, [[FOR_BODY13_I_PREHEADER_EPILOGUE]] ]
; CHECK-NEXT:    [[ADD15_I_EPILOGUE:%.*]] = add i32 [[ADD14_I_EPILOGUE]], [[J_03_I_EPILOGUE]]
; CHECK-NEXT:    [[IDXPROM_I_EPILOGUE:%.*]] = zext i32 [[ADD15_I_EPILOGUE]] to i64
; CHECK-NEXT:    [[ARRAYIDX_I_EPILOGUE:%.*]] = getelementptr inbounds i8, ptr [[TARGET]], i64 [[IDXPROM_I_EPILOGUE]]
; CHECK-NEXT:    [[TMP19:%.*]] = load i8, ptr [[ARRAYIDX_I_EPILOGUE]], align 1, !tbaa [[TBAA21]], !noalias [[META14]]
; CHECK-NEXT:    [[ADD17_I_EPILOGUE:%.*]] = add nuw nsw i32 [[J_03_I_EPILOGUE]], [[I_05_I_EPILOGUE]]
; CHECK-NEXT:    [[IDXPROM18_I_EPILOGUE:%.*]] = zext i32 [[ADD17_I_EPILOGUE]] to i64
; CHECK-NEXT:    [[ARRAYIDX19_I_EPILOGUE:%.*]] = getelementptr inbounds i8, ptr [[QUERY]], i64 [[IDXPROM18_I_EPILOGUE]]
; CHECK-NEXT:    [[TMP20:%.*]] = load i8, ptr [[ARRAYIDX19_I_EPILOGUE]], align 1, !tbaa [[TBAA21]], !noalias [[META14]]
; CHECK-NEXT:    [[CMP21_NOT_I_EPILOGUE:%.*]] = icmp ne i8 [[TMP19]], [[TMP20]]
; CHECK-NEXT:    [[INC_I_EPILOGUE:%.*]] = zext i1 [[CMP21_NOT_I_EPILOGUE]] to i32
; CHECK-NEXT:    [[SPEC_SELECT_I_EPILOGUE]] = add nuw nsw i32 [[DISTANCE_02_I_EPILOGUE]], [[INC_I_EPILOGUE]]
; CHECK-NEXT:    [[INC22_I_EPILOGUE]] = add nuw nsw i32 [[J_03_I_EPILOGUE]], 1
; CHECK-NEXT:    [[EXITCOND_NOT_I_EPILOGUE:%.*]] = icmp eq i32 [[INC22_I_EPILOGUE]], [[COARSE_MATCH_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; CHECK-NEXT:    br i1 [[EXITCOND_NOT_I_EPILOGUE]], label [[FOR_COND_CLEANUP12_I_LOOPEXIT_EPILOGUE:%.*]], label [[FOR_BODY13_I_EPILOGUE]], !llvm.loop [[LOOP22]]
; CHECK:       for.cond.cleanup12.i.loopexit.epilogue:
; CHECK-NEXT:    [[SPEC_SELECT_I_LCSSA_EPILOGUE:%.*]] = phi i32 [ [[SPEC_SELECT_I_EPILOGUE]], [[FOR_BODY13_I_EPILOGUE]] ]
; CHECK-NEXT:    br label [[FOR_COND_CLEANUP12_I_EPILOGUE]]
; CHECK:       for.cond.cleanup12.i.epilogue:
; CHECK-NEXT:    [[DISTANCE_0_LCSSA_I_EPILOGUE:%.*]] = phi i32 [ 0, [[FOR_COND10_PREHEADER_I_EPILOGUE]] ], [ [[SPEC_SELECT_I_LCSSA_EPILOGUE]], [[FOR_COND_CLEANUP12_I_LOOPEXIT_EPILOGUE]] ]
; CHECK-NEXT:    [[CMP23_NOT_I_EPILOGUE:%.*]] = icmp slt i32 [[DISTANCE_0_LCSSA_I_EPILOGUE]], [[COARSE_MATCH_THRESHOLD_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; CHECK-NEXT:    br i1 [[CMP23_NOT_I_EPILOGUE]], label [[CLEANUP28_I_EPILOGUE:%.*]], label [[FOR_COND_I_EPILOGUE]]
; CHECK:       for.cond.i.epilogue:
; CHECK-NEXT:    [[INC27_I_EPILOGUE]] = add nuw i32 [[I_05_I_EPILOGUE]], 1
; CHECK-NEXT:    [[EXITCOND9_NOT_I_EPILOGUE:%.*]] = icmp eq i32 [[INC27_I_EPILOGUE]], [[TMP5]]
; CHECK-NEXT:    br i1 [[EXITCOND9_NOT_I_EPILOGUE]], label [[IF_END33_I_LOOPEXIT_EPILOGUE:%.*]], label [[FOR_COND10_PREHEADER_I_EPILOGUE]], !llvm.loop [[LOOP26]]
; CHECK:       if.end33.i.loopexit.epilogue:
; CHECK-NEXT:    br label [[IF_END33_I_EPILOGUE]]
; CHECK:       cleanup28.i.epilogue:
; CHECK-NEXT:    [[IDXPROM31_I_EPILOGUE:%.*]] = zext i32 [[DOTOMP_IV_07_I_EPILOGUE]] to i64
; CHECK-NEXT:    [[ARRAYIDX32_I_EPILOGUE:%.*]] = getelementptr inbounds i8, ptr [[BATCH_RESULT]], i64 [[IDXPROM31_I_EPILOGUE]]
; CHECK-NEXT:    store i8 1, ptr [[ARRAYIDX32_I_EPILOGUE]], align 1, !tbaa [[TBAA21]], !noalias [[META14]]
; CHECK-NEXT:    br label [[IF_END33_I_EPILOGUE]]
; CHECK:       if.end33.i.epilogue:
; CHECK-NEXT:    [[ADD34_I_EPILOGUE]] = add i32 [[DOTOMP_IV_07_I_EPILOGUE]], [[TMP3]]
; CHECK-NEXT:    [[CMP6_I_EPILOGUE:%.*]] = icmp ult i32 [[ADD34_I_EPILOGUE]], [[CONV5_I]]
; CHECK-NEXT:    br i1 [[CMP6_I_EPILOGUE]], label [[OMP_INNER_FOR_BODY_I_EPILOGUE]], label [[OMP_LOOP_EXIT_I_LOOPEXIT]], !llvm.loop [[LOOP27:![0-9]+]]
; CHECK:       omp.loop.exit.i.loopexit:
; CHECK-NEXT:    br label [[OMP_LOOP_EXIT_I]]
; CHECK:       omp.loop.exit.i:
; CHECK-NEXT:    tail call void @__kmpc_distribute_static_fini(ptr addrspacecast (ptr addrspace(1) @[[GLOB6:[0-9]+]] to ptr), i32 [[TMP1]]) #[[ATTR1]], !noalias [[META14]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_IS_LAST_I]]) #[[ATTR1]], !noalias [[META14]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_STRIDE_I]]) #[[ATTR1]], !noalias [[META14]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_UB_I]]) #[[ATTR1]], !noalias [[META14]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_LB_I]]) #[[ATTR1]], !noalias [[META14]]
; CHECK-NEXT:    br label [[__OMP_OFFLOADING_58_208BEB0__Z2GAPKCS0_PCJIIII_L18_DEBUG___OMP_OUTLINED_DEBUG___OMP_OUTLINED_DEBUG___EXIT]]
; CHECK:       __omp_offloading_58_208beb0__Z2gaPKcS0_Pcjiiii_l18_debug___omp_outlined_debug___omp_outlined_debug__.exit:
; CHECK-NEXT:    ret void
;
; DRCHECK-LABEL: define internal void @__omp_offloading_58_208beb0__Z2gaPKcS0_Pcjiiii_l18_debug___omp_outlined_debug___omp_outlined(
; DRCHECK-SAME: ptr noalias nocapture noundef readonly [[DOTGLOBAL_TID_:%.*]], ptr noalias nocapture readnone [[DOTBOUND_TID_:%.*]], i64 noundef [[DOTPREVIOUS_LB_:%.*]], i64 noundef [[DOTPREVIOUS_UB_:%.*]], i64 noundef [[LENGTH:%.*]], i64 noundef [[QUERY_SEQUENCE_LENGTH:%.*]], i64 noundef [[COARSE_MATCH_LENGTH:%.*]], ptr nocapture noundef readonly [[TARGET:%.*]], i64 noundef [[CURRENT_POSITION:%.*]], ptr nocapture noundef readonly [[QUERY:%.*]], i64 noundef [[COARSE_MATCH_THRESHOLD:%.*]], ptr nocapture noundef writeonly [[BATCH_RESULT:%.*]]) #[[ATTR2:[0-9]+]] {
; DRCHECK-NEXT:  entry:
; DRCHECK-NEXT:    [[DOTOMP_LB_I:%.*]] = alloca i32, align 4, addrspace(5)
; DRCHECK-NEXT:    [[DOTOMP_UB_I:%.*]] = alloca i32, align 4, addrspace(5)
; DRCHECK-NEXT:    [[DOTOMP_STRIDE_I:%.*]] = alloca i32, align 4, addrspace(5)
; DRCHECK-NEXT:    [[DOTOMP_IS_LAST_I:%.*]] = alloca i32, align 4, addrspace(5)
; DRCHECK-NEXT:    [[QUERY_SEQUENCE_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC:%.*]] = trunc i64 [[QUERY_SEQUENCE_LENGTH]] to i32
; DRCHECK-NEXT:    [[COARSE_MATCH_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC:%.*]] = trunc i64 [[COARSE_MATCH_LENGTH]] to i32
; DRCHECK-NEXT:    [[CURRENT_POSITION_ADDR_SROA_0_0_EXTRACT_TRUNC:%.*]] = trunc i64 [[CURRENT_POSITION]] to i32
; DRCHECK-NEXT:    [[COARSE_MATCH_THRESHOLD_ADDR_SROA_0_0_EXTRACT_TRUNC:%.*]] = trunc i64 [[COARSE_MATCH_THRESHOLD]] to i32
; DRCHECK-NEXT:    tail call void @llvm.experimental.noalias.scope.decl(metadata [[META14:![0-9]+]])
; DRCHECK-NEXT:    [[TMP0:%.*]] = and i64 [[LENGTH]], 4294967295
; DRCHECK-NEXT:    [[CMP_NOT_I:%.*]] = icmp eq i64 [[TMP0]], 0
; DRCHECK-NEXT:    br i1 [[CMP_NOT_I]], label [[__OMP_OFFLOADING_58_208BEB0__Z2GAPKCS0_PCJIIII_L18_DEBUG___OMP_OUTLINED_DEBUG___OMP_OUTLINED_DEBUG___EXIT:%.*]], label [[OMP_PRECOND_THEN_I:%.*]]
; DRCHECK:       omp.precond.then.i:
; DRCHECK-NEXT:    [[DOTOMP_STRIDE_ASCAST_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_STRIDE_I]] to ptr
; DRCHECK-NEXT:    [[DOTOMP_IS_LAST_ASCAST_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_IS_LAST_I]] to ptr
; DRCHECK-NEXT:    [[DOTOMP_UB_ASCAST_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_UB_I]] to ptr
; DRCHECK-NEXT:    [[DOTOMP_LB_ASCAST_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_LB_I]] to ptr
; DRCHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_LB_I]]) #[[ATTR7:[0-9]+]], !noalias [[META14]]
; DRCHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_UB_I]]) #[[ATTR7]], !noalias [[META14]]
; DRCHECK-NEXT:    [[CONV_I:%.*]] = trunc i64 [[DOTPREVIOUS_LB_]] to i32
; DRCHECK-NEXT:    [[CONV3_I:%.*]] = trunc i64 [[DOTPREVIOUS_UB_]] to i32
; DRCHECK-NEXT:    store i32 [[CONV_I]], ptr addrspace(5) [[DOTOMP_LB_I]], align 4, !tbaa [[TBAA17:![0-9]+]], !noalias [[META14]]
; DRCHECK-NEXT:    store i32 [[CONV3_I]], ptr addrspace(5) [[DOTOMP_UB_I]], align 4, !tbaa [[TBAA17]], !noalias [[META14]]
; DRCHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_STRIDE_I]]) #[[ATTR7]], !noalias [[META14]]
; DRCHECK-NEXT:    store i32 1, ptr addrspace(5) [[DOTOMP_STRIDE_I]], align 4, !tbaa [[TBAA17]], !noalias [[META14]]
; DRCHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_IS_LAST_I]]) #[[ATTR7]], !noalias [[META14]]
; DRCHECK-NEXT:    store i32 0, ptr addrspace(5) [[DOTOMP_IS_LAST_I]], align 4, !tbaa [[TBAA17]], !noalias [[META14]]
; DRCHECK-NEXT:    [[TMP1:%.*]] = load i32, ptr [[DOTGLOBAL_TID_]], align 4, !tbaa [[TBAA17]], !alias.scope [[META14]]
; DRCHECK-NEXT:    call void @__kmpc_for_static_init_4u(ptr addrspacecast (ptr addrspace(1) @[[GLOB4:[0-9]+]] to ptr), i32 [[TMP1]], i32 33, ptr nocapture nonnull [[DOTOMP_IS_LAST_ASCAST_I]], ptr nocapture nonnull [[DOTOMP_LB_ASCAST_I]], ptr nocapture nonnull [[DOTOMP_UB_ASCAST_I]], ptr nocapture nonnull [[DOTOMP_STRIDE_ASCAST_I]], i32 1, i32 1) #[[ATTR1:[0-9]+]], !noalias [[META14]]
; DRCHECK-NEXT:    [[TMP2:%.*]] = load i32, ptr addrspace(5) [[DOTOMP_LB_I]], align 4, !tbaa [[TBAA17]], !noalias [[META14]]
; DRCHECK-NEXT:    [[CONV5_I:%.*]] = add i32 [[CONV3_I]], 1
; DRCHECK-NEXT:    [[CMP66_I:%.*]] = icmp ult i32 [[TMP2]], [[CONV5_I]]
; DRCHECK-NEXT:    br i1 [[CMP66_I]], label [[OMP_INNER_FOR_BODY_LR_PH_I:%.*]], label [[OMP_LOOP_EXIT_I:%.*]]
; DRCHECK:       omp.inner.for.body.lr.ph.i:
; DRCHECK-NEXT:    [[CMP9_NOT_NOT4_I:%.*]] = icmp slt i32 [[QUERY_SEQUENCE_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]], [[COARSE_MATCH_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; DRCHECK-NEXT:    [[CMP111_I:%.*]] = icmp sgt i32 [[COARSE_MATCH_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]], 0
; DRCHECK-NEXT:    [[TMP3:%.*]] = load i32, ptr addrspace(5) [[DOTOMP_STRIDE_I]], align 4, !tbaa [[TBAA17]], !noalias [[META14]]
; DRCHECK-NEXT:    [[TMP4:%.*]] = add i32 [[QUERY_SEQUENCE_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]], 1
; DRCHECK-NEXT:    [[TMP5:%.*]] = sub i32 [[TMP4]], [[COARSE_MATCH_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; DRCHECK-NEXT:    [[INITIAL_IV_COARSENED_1:%.*]] = add i32 [[TMP2]], [[TMP3]]
; DRCHECK-NEXT:    [[COARSENED_STEP:%.*]] = mul i32 [[TMP3]], 2
; DRCHECK-NEXT:    [[TMP6:%.*]] = sub i32 [[CONV5_I]], [[TMP2]]
; DRCHECK-NEXT:    [[TMP7:%.*]] = add i32 [[TMP6]], [[TMP3]]
; DRCHECK-NEXT:    [[TMP8:%.*]] = sub i32 [[TMP7]], 1
; DRCHECK-NEXT:    [[TMP9:%.*]] = udiv i32 [[TMP8]], [[TMP3]]
; DRCHECK-NEXT:    [[TMP10:%.*]] = udiv i32 [[TMP9]], 2
; DRCHECK-NEXT:    [[TMP11:%.*]] = mul nsw i32 [[TMP10]], 2
; DRCHECK-NEXT:    [[TMP12:%.*]] = mul nsw i32 [[TMP11]], [[TMP3]]
; DRCHECK-NEXT:    [[EPILOGUE_START_IV:%.*]] = add i32 [[TMP12]], [[TMP2]]
; DRCHECK-NEXT:    [[IS_EPILOGUE_START:%.*]] = icmp eq i32 [[TMP2]], [[EPILOGUE_START_IV]]
; DRCHECK-NEXT:    br i1 [[IS_EPILOGUE_START]], label [[OMP_INNER_FOR_BODY_I_EPILOGUE:%.*]], label [[OMP_INNER_FOR_BODY_I:%.*]]
; DRCHECK:       omp.inner.for.body.i:
; DRCHECK-NEXT:    [[DOTOMP_IV_07_I:%.*]] = phi i32 [ [[TMP2]], [[OMP_INNER_FOR_BODY_LR_PH_I]] ], [ [[TMP16:%.*]], [[IF_END33_I:%.*]] ]
; DRCHECK-NEXT:    [[DOTOMP_IV_07_I_COARSENED_1:%.*]] = phi i32 [ [[INITIAL_IV_COARSENED_1]], [[OMP_INNER_FOR_BODY_LR_PH_I]] ], [ [[DOTCOARSENED_13:%.*]], [[IF_END33_I]] ]
; DRCHECK-NEXT:    br i1 [[CMP9_NOT_NOT4_I]], label [[IF_END33_I_DIVERGENT_EXIT:%.*]], label [[FOR_COND10_PREHEADER_LR_PH_I:%.*]]
; DRCHECK:       for.cond10.preheader.lr.ph.i:
; DRCHECK-NEXT:    [[ADD14_I:%.*]] = add i32 [[DOTOMP_IV_07_I]], [[CURRENT_POSITION_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; DRCHECK-NEXT:    [[ADD14_I_COARSENED_1:%.*]] = add i32 [[DOTOMP_IV_07_I_COARSENED_1]], [[CURRENT_POSITION_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; DRCHECK-NEXT:    br label [[FOR_COND10_PREHEADER_I:%.*]]
; DRCHECK:       for.cond.i:
; DRCHECK-NEXT:    [[INC27_I:%.*]] = add nuw i32 [[I_05_I:%.*]], 1
; DRCHECK-NEXT:    [[INC27_I_COARSENED_1:%.*]] = add nuw i32 [[I_05_I_COARSENED_1:%.*]], 1
; DRCHECK-NEXT:    [[EXITCOND9_NOT_I:%.*]] = icmp eq i32 [[INC27_I]], [[TMP5]]
; DRCHECK-NEXT:    [[EXITCOND9_NOT_I_COARSENED_1:%.*]] = icmp eq i32 [[INC27_I_COARSENED_1]], [[TMP5]]
; DRCHECK-NEXT:    br i1 [[EXITCOND9_NOT_I]], label [[IF_END33_I_LOOPEXIT:%.*]], label [[FOR_COND10_PREHEADER_I]], !llvm.loop [[LOOP21:![0-9]+]]
; DRCHECK:       for.cond10.preheader.i:
; DRCHECK-NEXT:    [[I_05_I]] = phi i32 [ 0, [[FOR_COND10_PREHEADER_LR_PH_I]] ], [ [[INC27_I]], [[FOR_COND_I:%.*]] ]
; DRCHECK-NEXT:    [[I_05_I_COARSENED_1]] = phi i32 [ 0, [[FOR_COND10_PREHEADER_LR_PH_I]] ], [ [[INC27_I_COARSENED_1]], [[FOR_COND_I]] ]
; DRCHECK-NEXT:    br i1 [[CMP111_I]], label [[FOR_BODY13_I_PREHEADER:%.*]], label [[FOR_COND_CLEANUP12_I:%.*]]
; DRCHECK:       for.body13.i.preheader:
; DRCHECK-NEXT:    br label [[FOR_BODY13_I:%.*]]
; DRCHECK:       for.cond.cleanup12.i.loopexit:
; DRCHECK-NEXT:    [[SPEC_SELECT_I_LCSSA:%.*]] = phi i32 [ [[SPEC_SELECT_I:%.*]], [[FOR_BODY13_I]] ]
; DRCHECK-NEXT:    [[SPEC_SELECT_I_LCSSA_COARSENED_1:%.*]] = phi i32 [ [[SPEC_SELECT_I_COARSENED_1:%.*]], [[FOR_BODY13_I]] ]
; DRCHECK-NEXT:    br label [[FOR_COND_CLEANUP12_I]]
; DRCHECK:       for.cond.cleanup12.i:
; DRCHECK-NEXT:    [[DISTANCE_0_LCSSA_I:%.*]] = phi i32 [ 0, [[FOR_COND10_PREHEADER_I]] ], [ [[SPEC_SELECT_I_LCSSA]], [[FOR_COND_CLEANUP12_I_LOOPEXIT:%.*]] ]
; DRCHECK-NEXT:    [[DISTANCE_0_LCSSA_I_COARSENED_1:%.*]] = phi i32 [ 0, [[FOR_COND10_PREHEADER_I]] ], [ [[SPEC_SELECT_I_LCSSA_COARSENED_1]], [[FOR_COND_CLEANUP12_I_LOOPEXIT]] ]
; DRCHECK-NEXT:    [[CMP23_NOT_I:%.*]] = icmp slt i32 [[DISTANCE_0_LCSSA_I]], [[COARSE_MATCH_THRESHOLD_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; DRCHECK-NEXT:    [[CMP23_NOT_I_COARSENED_1:%.*]] = icmp slt i32 [[DISTANCE_0_LCSSA_I_COARSENED_1]], [[COARSE_MATCH_THRESHOLD_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; DRCHECK-NEXT:    [[TMP13:%.*]] = icmp eq i1 [[CMP23_NOT_I_COARSENED_1]], [[CMP23_NOT_I]]
; DRCHECK-NEXT:    br i1 [[TMP13]], label [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY:%.*]], label [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_0:%.*]]
; DRCHECK:       for.cond.cleanup12.i.divergent.entry:
; DRCHECK-NEXT:    br i1 [[CMP23_NOT_I]], label [[CLEANUP28_I:%.*]], label [[FOR_COND_I]]
; DRCHECK:       for.body13.i:
; DRCHECK-NEXT:    [[J_03_I:%.*]] = phi i32 [ [[INC22_I:%.*]], [[FOR_BODY13_I]] ], [ 0, [[FOR_BODY13_I_PREHEADER]] ]
; DRCHECK-NEXT:    [[J_03_I_COARSENED_1:%.*]] = phi i32 [ [[INC22_I_COARSENED_1:%.*]], [[FOR_BODY13_I]] ], [ 0, [[FOR_BODY13_I_PREHEADER]] ]
; DRCHECK-NEXT:    [[DISTANCE_02_I:%.*]] = phi i32 [ [[SPEC_SELECT_I]], [[FOR_BODY13_I]] ], [ 0, [[FOR_BODY13_I_PREHEADER]] ]
; DRCHECK-NEXT:    [[DISTANCE_02_I_COARSENED_1:%.*]] = phi i32 [ [[SPEC_SELECT_I_COARSENED_1]], [[FOR_BODY13_I]] ], [ 0, [[FOR_BODY13_I_PREHEADER]] ]
; DRCHECK-NEXT:    [[ADD15_I:%.*]] = add i32 [[ADD14_I]], [[J_03_I]]
; DRCHECK-NEXT:    [[ADD15_I_COARSENED_1:%.*]] = add i32 [[ADD14_I_COARSENED_1]], [[J_03_I_COARSENED_1]]
; DRCHECK-NEXT:    [[IDXPROM_I:%.*]] = zext i32 [[ADD15_I]] to i64
; DRCHECK-NEXT:    [[IDXPROM_I_COARSENED_1:%.*]] = zext i32 [[ADD15_I_COARSENED_1]] to i64
; DRCHECK-NEXT:    [[ARRAYIDX_I:%.*]] = getelementptr inbounds i8, ptr [[TARGET]], i64 [[IDXPROM_I]]
; DRCHECK-NEXT:    [[ARRAYIDX_I_COARSENED_1:%.*]] = getelementptr inbounds i8, ptr [[TARGET]], i64 [[IDXPROM_I_COARSENED_1]]
; DRCHECK-NEXT:    [[TMP14:%.*]] = load i8, ptr [[ARRAYIDX_I]], align 1, !tbaa [[TBAA23:![0-9]+]], !noalias [[META14]]
; DRCHECK-NEXT:    [[DOTCOARSENED_1:%.*]] = load i8, ptr [[ARRAYIDX_I_COARSENED_1]], align 1, !tbaa [[TBAA23]], !noalias [[META14]]
; DRCHECK-NEXT:    [[ADD17_I:%.*]] = add nuw nsw i32 [[J_03_I]], [[I_05_I]]
; DRCHECK-NEXT:    [[ADD17_I_COARSENED_1:%.*]] = add nuw nsw i32 [[J_03_I_COARSENED_1]], [[I_05_I_COARSENED_1]]
; DRCHECK-NEXT:    [[IDXPROM18_I:%.*]] = zext i32 [[ADD17_I]] to i64
; DRCHECK-NEXT:    [[IDXPROM18_I_COARSENED_1:%.*]] = zext i32 [[ADD17_I_COARSENED_1]] to i64
; DRCHECK-NEXT:    [[ARRAYIDX19_I:%.*]] = getelementptr inbounds i8, ptr [[QUERY]], i64 [[IDXPROM18_I]]
; DRCHECK-NEXT:    [[ARRAYIDX19_I_COARSENED_1:%.*]] = getelementptr inbounds i8, ptr [[QUERY]], i64 [[IDXPROM18_I_COARSENED_1]]
; DRCHECK-NEXT:    [[TMP15:%.*]] = load i8, ptr [[ARRAYIDX19_I]], align 1, !tbaa [[TBAA23]], !noalias [[META14]]
; DRCHECK-NEXT:    [[DOTCOARSENED_12:%.*]] = load i8, ptr [[ARRAYIDX19_I_COARSENED_1]], align 1, !tbaa [[TBAA23]], !noalias [[META14]]
; DRCHECK-NEXT:    [[CMP21_NOT_I:%.*]] = icmp ne i8 [[TMP14]], [[TMP15]]
; DRCHECK-NEXT:    [[CMP21_NOT_I_COARSENED_1:%.*]] = icmp ne i8 [[DOTCOARSENED_1]], [[DOTCOARSENED_12]]
; DRCHECK-NEXT:    [[INC_I:%.*]] = zext i1 [[CMP21_NOT_I]] to i32
; DRCHECK-NEXT:    [[INC_I_COARSENED_1:%.*]] = zext i1 [[CMP21_NOT_I_COARSENED_1]] to i32
; DRCHECK-NEXT:    [[SPEC_SELECT_I]] = add nuw nsw i32 [[DISTANCE_02_I]], [[INC_I]]
; DRCHECK-NEXT:    [[SPEC_SELECT_I_COARSENED_1]] = add nuw nsw i32 [[DISTANCE_02_I_COARSENED_1]], [[INC_I_COARSENED_1]]
; DRCHECK-NEXT:    [[INC22_I]] = add nuw nsw i32 [[J_03_I]], 1
; DRCHECK-NEXT:    [[INC22_I_COARSENED_1]] = add nuw nsw i32 [[J_03_I_COARSENED_1]], 1
; DRCHECK-NEXT:    [[EXITCOND_NOT_I:%.*]] = icmp eq i32 [[INC22_I]], [[COARSE_MATCH_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; DRCHECK-NEXT:    [[EXITCOND_NOT_I_COARSENED_1:%.*]] = icmp eq i32 [[INC22_I_COARSENED_1]], [[COARSE_MATCH_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; DRCHECK-NEXT:    br i1 [[EXITCOND_NOT_I]], label [[FOR_COND_CLEANUP12_I_LOOPEXIT]], label [[FOR_BODY13_I]], !llvm.loop [[LOOP24:![0-9]+]]
; DRCHECK:       cleanup28.i:
; DRCHECK-NEXT:    [[IDXPROM31_I:%.*]] = zext i32 [[DOTOMP_IV_07_I]] to i64
; DRCHECK-NEXT:    [[IDXPROM31_I_COARSENED_1:%.*]] = zext i32 [[DOTOMP_IV_07_I_COARSENED_1]] to i64
; DRCHECK-NEXT:    [[ARRAYIDX32_I:%.*]] = getelementptr inbounds i8, ptr [[BATCH_RESULT]], i64 [[IDXPROM31_I]]
; DRCHECK-NEXT:    [[ARRAYIDX32_I_COARSENED_1:%.*]] = getelementptr inbounds i8, ptr [[BATCH_RESULT]], i64 [[IDXPROM31_I_COARSENED_1]]
; DRCHECK-NEXT:    store i8 1, ptr [[ARRAYIDX32_I]], align 1, !tbaa [[TBAA23]], !noalias [[META14]]
; DRCHECK-NEXT:    store i8 1, ptr [[ARRAYIDX32_I_COARSENED_1]], align 1, !tbaa [[TBAA23]], !noalias [[META14]]
; DRCHECK-NEXT:    br label [[IF_END33_I_DIVERGENT_EXIT]]
; DRCHECK:       if.end33.i.loopexit:
; DRCHECK-NEXT:    br label [[IF_END33_I_DIVERGENT_EXIT]]
; DRCHECK:       if.end33.i.divergent.exit:
; DRCHECK-NEXT:    br label [[IF_END33_I]]
; DRCHECK:       if.end33.i:
; DRCHECK-NEXT:    [[TMP16]] = add i32 [[DOTOMP_IV_07_I]], [[COARSENED_STEP]]
; DRCHECK-NEXT:    [[DOTCOARSENED_13]] = add i32 [[DOTOMP_IV_07_I_COARSENED_1]], [[COARSENED_STEP]]
; DRCHECK-NEXT:    [[ADD34_I:%.*]] = add i32 [[DOTOMP_IV_07_I]], [[TMP3]]
; DRCHECK-NEXT:    [[ADD34_I_COARSENED_1:%.*]] = add i32 [[DOTOMP_IV_07_I_COARSENED_1]], [[TMP3]]
; DRCHECK-NEXT:    [[TMP17:%.*]] = icmp ult i32 [[TMP16]], [[CONV5_I]]
; DRCHECK-NEXT:    [[DOTCOARSENED_14:%.*]] = icmp ult i32 [[DOTCOARSENED_13]], [[CONV5_I]]
; DRCHECK-NEXT:    [[CMP6_I:%.*]] = icmp ult i32 [[ADD34_I]], [[CONV5_I]]
; DRCHECK-NEXT:    [[CMP6_I_COARSENED_1:%.*]] = icmp ult i32 [[ADD34_I_COARSENED_1]], [[CONV5_I]]
; DRCHECK-NEXT:    [[IS_EPILOGUE_START1:%.*]] = icmp eq i32 [[TMP16]], [[EPILOGUE_START_IV]]
; DRCHECK-NEXT:    [[IS_EPILOGUE_START1_COARSENED_1:%.*]] = icmp eq i32 [[DOTCOARSENED_13]], [[EPILOGUE_START_IV]]
; DRCHECK-NEXT:    br i1 [[IS_EPILOGUE_START1]], label [[COARSENED_END_CHECK:%.*]], label [[OMP_INNER_FOR_BODY_I]], !llvm.loop [[LOOP25:![0-9]+]]
; DRCHECK:       for.cond.i.drs.0:
; DRCHECK-NEXT:    [[INC27_I_DRS_0:%.*]] = add nuw i32 [[I_05_I_DRS_0_REG2MEM_0:%.*]], 1
; DRCHECK-NEXT:    [[EXITCOND9_NOT_I_DRS_0:%.*]] = icmp eq i32 [[INC27_I_DRS_0]], [[TMP5]]
; DRCHECK-NEXT:    br i1 [[EXITCOND9_NOT_I_DRS_0]], label [[IF_END33_I_LOOPEXIT_DRS_0:%.*]], label [[FOR_COND10_PREHEADER_I_DRS_0:%.*]], !llvm.loop [[LOOP21]]
; DRCHECK:       for.cond10.preheader.i.drs.0:
; DRCHECK-NEXT:    br i1 [[CMP111_I]], label [[FOR_BODY13_I_PREHEADER_DRS_0:%.*]], label [[FOR_COND_CLEANUP12_I_DRS_0:%.*]]
; DRCHECK:       for.body13.i.preheader.drs.0:
; DRCHECK-NEXT:    br label [[FOR_BODY13_I_DRS_0:%.*]]
; DRCHECK:       for.cond.cleanup12.i.loopexit.drs.0:
; DRCHECK-NEXT:    [[SPEC_SELECT_I_LCSSA_DRS_0:%.*]] = phi i32 [ [[SPEC_SELECT_I_DRS_0:%.*]], [[FOR_BODY13_I_DRS_0]] ]
; DRCHECK-NEXT:    br label [[FOR_COND_CLEANUP12_I_DRS_0]]
; DRCHECK:       for.cond.cleanup12.i.drs.0:
; DRCHECK-NEXT:    [[DISTANCE_0_LCSSA_I_DRS_0:%.*]] = phi i32 [ 0, [[FOR_COND10_PREHEADER_I_DRS_0]] ], [ [[SPEC_SELECT_I_LCSSA_DRS_0]], [[FOR_COND_CLEANUP12_I_LOOPEXIT_DRS_0:%.*]] ]
; DRCHECK-NEXT:    [[CMP23_NOT_I_DRS_0:%.*]] = icmp slt i32 [[DISTANCE_0_LCSSA_I_DRS_0]], [[COARSE_MATCH_THRESHOLD_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; DRCHECK-NEXT:    br label [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0:%.*]]
; DRCHECK:       for.cond.cleanup12.i.divergent.entry.drs.0.intro.0:
; DRCHECK-NEXT:    br label [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0]]
; DRCHECK:       for.cond.cleanup12.i.divergent.entry.drs.0.intro.1:
; DRCHECK-NEXT:    br label [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0]]
; DRCHECK:       for.cond.cleanup12.i.divergent.entry.drs.0:
; DRCHECK-NEXT:    [[DR_COARSENED_IDENT_0:%.*]] = phi i32 [ 0, [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_0]] ], [ 1, [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_1:%.*]] ], [ [[DR_COARSENED_IDENT_0]], [[FOR_COND_CLEANUP12_I_DRS_0]] ]
; DRCHECK-NEXT:    [[DOTOMP_IV_07_I_DRS_0_REG2MEM_0:%.*]] = phi i32 [ [[DOTOMP_IV_07_I]], [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_0]] ], [ [[DOTOMP_IV_07_I_COARSENED_1]], [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_1]] ], [ [[DOTOMP_IV_07_I_DRS_0_REG2MEM_0]], [[FOR_COND_CLEANUP12_I_DRS_0]] ]
; DRCHECK-NEXT:    [[CMP23_NOT_I_DRS_0_REG2MEM_0:%.*]] = phi i1 [ [[CMP23_NOT_I]], [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_0]] ], [ [[CMP23_NOT_I_COARSENED_1]], [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_1]] ], [ [[CMP23_NOT_I_DRS_0]], [[FOR_COND_CLEANUP12_I_DRS_0]] ]
; DRCHECK-NEXT:    [[ADD14_I_DRS_0_REG2MEM_0:%.*]] = phi i32 [ [[ADD14_I]], [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_0]] ], [ [[ADD14_I_COARSENED_1]], [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_1]] ], [ [[ADD14_I_DRS_0_REG2MEM_0]], [[FOR_COND_CLEANUP12_I_DRS_0]] ]
; DRCHECK-NEXT:    [[I_05_I_DRS_0_REG2MEM_0]] = phi i32 [ [[I_05_I]], [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_0]] ], [ [[I_05_I_COARSENED_1]], [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_1]] ], [ [[INC27_I_DRS_0]], [[FOR_COND_CLEANUP12_I_DRS_0]] ]
; DRCHECK-NEXT:    br i1 [[CMP23_NOT_I_DRS_0_REG2MEM_0]], label [[CLEANUP28_I_DRS_0:%.*]], label [[FOR_COND_I_DRS_0:%.*]]
; DRCHECK:       for.body13.i.drs.0:
; DRCHECK-NEXT:    [[J_03_I_DRS_0:%.*]] = phi i32 [ [[INC22_I_DRS_0:%.*]], [[FOR_BODY13_I_DRS_0]] ], [ 0, [[FOR_BODY13_I_PREHEADER_DRS_0]] ]
; DRCHECK-NEXT:    [[DISTANCE_02_I_DRS_0:%.*]] = phi i32 [ [[SPEC_SELECT_I_DRS_0]], [[FOR_BODY13_I_DRS_0]] ], [ 0, [[FOR_BODY13_I_PREHEADER_DRS_0]] ]
; DRCHECK-NEXT:    [[ADD15_I_DRS_0:%.*]] = add i32 [[ADD14_I_DRS_0_REG2MEM_0]], [[J_03_I_DRS_0]]
; DRCHECK-NEXT:    [[IDXPROM_I_DRS_0:%.*]] = zext i32 [[ADD15_I_DRS_0]] to i64
; DRCHECK-NEXT:    [[ARRAYIDX_I_DRS_0:%.*]] = getelementptr inbounds i8, ptr [[TARGET]], i64 [[IDXPROM_I_DRS_0]]
; DRCHECK-NEXT:    [[TMP18:%.*]] = load i8, ptr [[ARRAYIDX_I_DRS_0]], align 1, !tbaa [[TBAA23]], !noalias [[META14]]
; DRCHECK-NEXT:    [[ADD17_I_DRS_0:%.*]] = add nuw nsw i32 [[J_03_I_DRS_0]], [[INC27_I_DRS_0]]
; DRCHECK-NEXT:    [[IDXPROM18_I_DRS_0:%.*]] = zext i32 [[ADD17_I_DRS_0]] to i64
; DRCHECK-NEXT:    [[ARRAYIDX19_I_DRS_0:%.*]] = getelementptr inbounds i8, ptr [[QUERY]], i64 [[IDXPROM18_I_DRS_0]]
; DRCHECK-NEXT:    [[TMP19:%.*]] = load i8, ptr [[ARRAYIDX19_I_DRS_0]], align 1, !tbaa [[TBAA23]], !noalias [[META14]]
; DRCHECK-NEXT:    [[CMP21_NOT_I_DRS_0:%.*]] = icmp ne i8 [[TMP18]], [[TMP19]]
; DRCHECK-NEXT:    [[INC_I_DRS_0:%.*]] = zext i1 [[CMP21_NOT_I_DRS_0]] to i32
; DRCHECK-NEXT:    [[SPEC_SELECT_I_DRS_0]] = add nuw nsw i32 [[DISTANCE_02_I_DRS_0]], [[INC_I_DRS_0]]
; DRCHECK-NEXT:    [[INC22_I_DRS_0]] = add nuw nsw i32 [[J_03_I_DRS_0]], 1
; DRCHECK-NEXT:    [[EXITCOND_NOT_I_DRS_0:%.*]] = icmp eq i32 [[INC22_I_DRS_0]], [[COARSE_MATCH_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; DRCHECK-NEXT:    br i1 [[EXITCOND_NOT_I_DRS_0]], label [[FOR_COND_CLEANUP12_I_LOOPEXIT_DRS_0]], label [[FOR_BODY13_I_DRS_0]], !llvm.loop [[LOOP24]]
; DRCHECK:       cleanup28.i.drs.0:
; DRCHECK-NEXT:    [[IDXPROM31_I_DRS_0:%.*]] = zext i32 [[DOTOMP_IV_07_I_DRS_0_REG2MEM_0]] to i64
; DRCHECK-NEXT:    [[ARRAYIDX32_I_DRS_0:%.*]] = getelementptr inbounds i8, ptr [[BATCH_RESULT]], i64 [[IDXPROM31_I_DRS_0]]
; DRCHECK-NEXT:    store i8 1, ptr [[ARRAYIDX32_I_DRS_0]], align 1, !tbaa [[TBAA23]], !noalias [[META14]]
; DRCHECK-NEXT:    br label [[IF_END33_I_DIVERGENT_EXIT_DRS_0:%.*]]
; DRCHECK:       if.end33.i.loopexit.drs.0:
; DRCHECK-NEXT:    br label [[IF_END33_I_DIVERGENT_EXIT_DRS_0]]
; DRCHECK:       if.end33.i.divergent.exit.drs.0:
; DRCHECK-NEXT:    switch i32 [[DR_COARSENED_IDENT_0]], label [[IF_END33_I_DIVERGENT_EXIT_DRS_0_OUTRO_0:%.*]] [
; DRCHECK-NEXT:      i32 1, label [[IF_END33_I_DIVERGENT_EXIT_DRS_0_OUTRO_1:%.*]]
; DRCHECK-NEXT:    ]
; DRCHECK:       if.end33.i.divergent.exit.drs.0.outro.0:
; DRCHECK-NEXT:    br label [[FOR_COND_CLEANUP12_I_DIVERGENT_ENTRY_DRS_0_INTRO_1]]
; DRCHECK:       if.end33.i.divergent.exit.drs.0.outro.1:
; DRCHECK-NEXT:    br label [[IF_END33_I]]
; DRCHECK:       coarsened.end.check:
; DRCHECK-NEXT:    br i1 [[TMP17]], label [[OMP_INNER_FOR_BODY_I_EPILOGUE]], label [[OMP_LOOP_EXIT_I_LOOPEXIT:%.*]]
; DRCHECK:       omp.inner.for.body.i.epilogue:
; DRCHECK-NEXT:    [[DOTOMP_IV_07_I_EPILOGUE:%.*]] = phi i32 [ [[TMP16]], [[COARSENED_END_CHECK]] ], [ [[ADD34_I_EPILOGUE:%.*]], [[IF_END33_I_EPILOGUE:%.*]] ], [ [[TMP2]], [[OMP_INNER_FOR_BODY_LR_PH_I]] ]
; DRCHECK-NEXT:    br i1 [[CMP9_NOT_NOT4_I]], label [[IF_END33_I_EPILOGUE]], label [[FOR_COND10_PREHEADER_LR_PH_I_EPILOGUE:%.*]]
; DRCHECK:       for.cond10.preheader.lr.ph.i.epilogue:
; DRCHECK-NEXT:    [[ADD14_I_EPILOGUE:%.*]] = add i32 [[DOTOMP_IV_07_I_EPILOGUE]], [[CURRENT_POSITION_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; DRCHECK-NEXT:    br label [[FOR_COND10_PREHEADER_I_EPILOGUE:%.*]]
; DRCHECK:       for.cond10.preheader.i.epilogue:
; DRCHECK-NEXT:    [[I_05_I_EPILOGUE:%.*]] = phi i32 [ 0, [[FOR_COND10_PREHEADER_LR_PH_I_EPILOGUE]] ], [ [[INC27_I_EPILOGUE:%.*]], [[FOR_COND_I_EPILOGUE:%.*]] ]
; DRCHECK-NEXT:    br i1 [[CMP111_I]], label [[FOR_BODY13_I_PREHEADER_EPILOGUE:%.*]], label [[FOR_COND_CLEANUP12_I_EPILOGUE:%.*]]
; DRCHECK:       for.body13.i.preheader.epilogue:
; DRCHECK-NEXT:    br label [[FOR_BODY13_I_EPILOGUE:%.*]]
; DRCHECK:       for.body13.i.epilogue:
; DRCHECK-NEXT:    [[J_03_I_EPILOGUE:%.*]] = phi i32 [ [[INC22_I_EPILOGUE:%.*]], [[FOR_BODY13_I_EPILOGUE]] ], [ 0, [[FOR_BODY13_I_PREHEADER_EPILOGUE]] ]
; DRCHECK-NEXT:    [[DISTANCE_02_I_EPILOGUE:%.*]] = phi i32 [ [[SPEC_SELECT_I_EPILOGUE:%.*]], [[FOR_BODY13_I_EPILOGUE]] ], [ 0, [[FOR_BODY13_I_PREHEADER_EPILOGUE]] ]
; DRCHECK-NEXT:    [[ADD15_I_EPILOGUE:%.*]] = add i32 [[ADD14_I_EPILOGUE]], [[J_03_I_EPILOGUE]]
; DRCHECK-NEXT:    [[IDXPROM_I_EPILOGUE:%.*]] = zext i32 [[ADD15_I_EPILOGUE]] to i64
; DRCHECK-NEXT:    [[ARRAYIDX_I_EPILOGUE:%.*]] = getelementptr inbounds i8, ptr [[TARGET]], i64 [[IDXPROM_I_EPILOGUE]]
; DRCHECK-NEXT:    [[TMP20:%.*]] = load i8, ptr [[ARRAYIDX_I_EPILOGUE]], align 1, !tbaa [[TBAA23]], !noalias [[META14]]
; DRCHECK-NEXT:    [[ADD17_I_EPILOGUE:%.*]] = add nuw nsw i32 [[J_03_I_EPILOGUE]], [[I_05_I_EPILOGUE]]
; DRCHECK-NEXT:    [[IDXPROM18_I_EPILOGUE:%.*]] = zext i32 [[ADD17_I_EPILOGUE]] to i64
; DRCHECK-NEXT:    [[ARRAYIDX19_I_EPILOGUE:%.*]] = getelementptr inbounds i8, ptr [[QUERY]], i64 [[IDXPROM18_I_EPILOGUE]]
; DRCHECK-NEXT:    [[TMP21:%.*]] = load i8, ptr [[ARRAYIDX19_I_EPILOGUE]], align 1, !tbaa [[TBAA23]], !noalias [[META14]]
; DRCHECK-NEXT:    [[CMP21_NOT_I_EPILOGUE:%.*]] = icmp ne i8 [[TMP20]], [[TMP21]]
; DRCHECK-NEXT:    [[INC_I_EPILOGUE:%.*]] = zext i1 [[CMP21_NOT_I_EPILOGUE]] to i32
; DRCHECK-NEXT:    [[SPEC_SELECT_I_EPILOGUE]] = add nuw nsw i32 [[DISTANCE_02_I_EPILOGUE]], [[INC_I_EPILOGUE]]
; DRCHECK-NEXT:    [[INC22_I_EPILOGUE]] = add nuw nsw i32 [[J_03_I_EPILOGUE]], 1
; DRCHECK-NEXT:    [[EXITCOND_NOT_I_EPILOGUE:%.*]] = icmp eq i32 [[INC22_I_EPILOGUE]], [[COARSE_MATCH_LENGTH_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; DRCHECK-NEXT:    br i1 [[EXITCOND_NOT_I_EPILOGUE]], label [[FOR_COND_CLEANUP12_I_LOOPEXIT_EPILOGUE:%.*]], label [[FOR_BODY13_I_EPILOGUE]], !llvm.loop [[LOOP24]]
; DRCHECK:       for.cond.cleanup12.i.loopexit.epilogue:
; DRCHECK-NEXT:    [[SPEC_SELECT_I_LCSSA_EPILOGUE:%.*]] = phi i32 [ [[SPEC_SELECT_I_EPILOGUE]], [[FOR_BODY13_I_EPILOGUE]] ]
; DRCHECK-NEXT:    br label [[FOR_COND_CLEANUP12_I_EPILOGUE]]
; DRCHECK:       for.cond.cleanup12.i.epilogue:
; DRCHECK-NEXT:    [[DISTANCE_0_LCSSA_I_EPILOGUE:%.*]] = phi i32 [ 0, [[FOR_COND10_PREHEADER_I_EPILOGUE]] ], [ [[SPEC_SELECT_I_LCSSA_EPILOGUE]], [[FOR_COND_CLEANUP12_I_LOOPEXIT_EPILOGUE]] ]
; DRCHECK-NEXT:    [[CMP23_NOT_I_EPILOGUE:%.*]] = icmp slt i32 [[DISTANCE_0_LCSSA_I_EPILOGUE]], [[COARSE_MATCH_THRESHOLD_ADDR_SROA_0_0_EXTRACT_TRUNC]]
; DRCHECK-NEXT:    br i1 [[CMP23_NOT_I_EPILOGUE]], label [[CLEANUP28_I_EPILOGUE:%.*]], label [[FOR_COND_I_EPILOGUE]]
; DRCHECK:       for.cond.i.epilogue:
; DRCHECK-NEXT:    [[INC27_I_EPILOGUE]] = add nuw i32 [[I_05_I_EPILOGUE]], 1
; DRCHECK-NEXT:    [[EXITCOND9_NOT_I_EPILOGUE:%.*]] = icmp eq i32 [[INC27_I_EPILOGUE]], [[TMP5]]
; DRCHECK-NEXT:    br i1 [[EXITCOND9_NOT_I_EPILOGUE]], label [[IF_END33_I_LOOPEXIT_EPILOGUE:%.*]], label [[FOR_COND10_PREHEADER_I_EPILOGUE]], !llvm.loop [[LOOP21]]
; DRCHECK:       if.end33.i.loopexit.epilogue:
; DRCHECK-NEXT:    br label [[IF_END33_I_EPILOGUE]]
; DRCHECK:       cleanup28.i.epilogue:
; DRCHECK-NEXT:    [[IDXPROM31_I_EPILOGUE:%.*]] = zext i32 [[DOTOMP_IV_07_I_EPILOGUE]] to i64
; DRCHECK-NEXT:    [[ARRAYIDX32_I_EPILOGUE:%.*]] = getelementptr inbounds i8, ptr [[BATCH_RESULT]], i64 [[IDXPROM31_I_EPILOGUE]]
; DRCHECK-NEXT:    store i8 1, ptr [[ARRAYIDX32_I_EPILOGUE]], align 1, !tbaa [[TBAA23]], !noalias [[META14]]
; DRCHECK-NEXT:    br label [[IF_END33_I_EPILOGUE]]
; DRCHECK:       if.end33.i.epilogue:
; DRCHECK-NEXT:    [[ADD34_I_EPILOGUE]] = add i32 [[DOTOMP_IV_07_I_EPILOGUE]], [[TMP3]]
; DRCHECK-NEXT:    [[CMP6_I_EPILOGUE:%.*]] = icmp ult i32 [[ADD34_I_EPILOGUE]], [[CONV5_I]]
; DRCHECK-NEXT:    br i1 [[CMP6_I_EPILOGUE]], label [[OMP_INNER_FOR_BODY_I_EPILOGUE]], label [[OMP_LOOP_EXIT_I_LOOPEXIT]], !llvm.loop [[LOOP27:![0-9]+]]
; DRCHECK:       omp.loop.exit.i.loopexit:
; DRCHECK-NEXT:    br label [[OMP_LOOP_EXIT_I]]
; DRCHECK:       omp.loop.exit.i:
; DRCHECK-NEXT:    tail call void @__kmpc_distribute_static_fini(ptr addrspacecast (ptr addrspace(1) @[[GLOB6:[0-9]+]] to ptr), i32 [[TMP1]]) #[[ATTR1]], !noalias [[META14]]
; DRCHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_IS_LAST_I]]) #[[ATTR1]], !noalias [[META14]]
; DRCHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_STRIDE_I]]) #[[ATTR1]], !noalias [[META14]]
; DRCHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_UB_I]]) #[[ATTR1]], !noalias [[META14]]
; DRCHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_LB_I]]) #[[ATTR1]], !noalias [[META14]]
; DRCHECK-NEXT:    br label [[__OMP_OFFLOADING_58_208BEB0__Z2GAPKCS0_PCJIIII_L18_DEBUG___OMP_OUTLINED_DEBUG___OMP_OUTLINED_DEBUG___EXIT]]
; DRCHECK:       __omp_offloading_58_208beb0__Z2gaPKcS0_Pcjiiii_l18_debug___omp_outlined_debug___omp_outlined_debug__.exit:
; DRCHECK-NEXT:    ret void
;
entry:
  %.omp.lb.i = alloca i32, align 4, addrspace(5)
  %.omp.ub.i = alloca i32, align 4, addrspace(5)
  %.omp.stride.i = alloca i32, align 4, addrspace(5)
  %.omp.is_last.i = alloca i32, align 4, addrspace(5)
  %query_sequence_length.addr.sroa.0.0.extract.trunc = trunc i64 %query_sequence_length to i32
  %coarse_match_length.addr.sroa.0.0.extract.trunc = trunc i64 %coarse_match_length to i32
  %current_position.addr.sroa.0.0.extract.trunc = trunc i64 %current_position to i32
  %coarse_match_threshold.addr.sroa.0.0.extract.trunc = trunc i64 %coarse_match_threshold to i32
  tail call void @llvm.experimental.noalias.scope.decl(metadata !16)
  %0 = and i64 %length, 4294967295
  %cmp.not.i = icmp eq i64 %0, 0
  br i1 %cmp.not.i, label %__omp_offloading_58_208beb0__Z2gaPKcS0_Pcjiiii_l18_debug___omp_outlined_debug___omp_outlined_debug__.exit, label %omp.precond.then.i

omp.precond.then.i:                               ; preds = %entry
  %.omp.stride.ascast.i = addrspacecast ptr addrspace(5) %.omp.stride.i to ptr
  %.omp.is_last.ascast.i = addrspacecast ptr addrspace(5) %.omp.is_last.i to ptr
  %.omp.ub.ascast.i = addrspacecast ptr addrspace(5) %.omp.ub.i to ptr
  %.omp.lb.ascast.i = addrspacecast ptr addrspace(5) %.omp.lb.i to ptr
  call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) %.omp.lb.i) #7, !noalias !16
  call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) %.omp.ub.i) #7, !noalias !16
  %conv.i = trunc i64 %.previous.lb. to i32
  %conv3.i = trunc i64 %.previous.ub. to i32
  store i32 %conv.i, ptr addrspace(5) %.omp.lb.i, align 4, !tbaa !19, !noalias !16
  store i32 %conv3.i, ptr addrspace(5) %.omp.ub.i, align 4, !tbaa !19, !noalias !16
  call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) %.omp.stride.i) #7, !noalias !16
  store i32 1, ptr addrspace(5) %.omp.stride.i, align 4, !tbaa !19, !noalias !16
  call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) %.omp.is_last.i) #7, !noalias !16
  store i32 0, ptr addrspace(5) %.omp.is_last.i, align 4, !tbaa !19, !noalias !16
  %1 = load i32, ptr %.global_tid., align 4, !tbaa !19, !alias.scope !16
  call void @__kmpc_for_static_init_4u(ptr addrspacecast (ptr addrspace(1) @4 to ptr), i32 %1, i32 33, ptr nocapture nonnull %.omp.is_last.ascast.i, ptr nocapture nonnull %.omp.lb.ascast.i, ptr nocapture nonnull %.omp.ub.ascast.i, ptr nocapture nonnull %.omp.stride.ascast.i, i32 1, i32 1) #1, !noalias !16
  %2 = load i32, ptr addrspace(5) %.omp.lb.i, align 4, !tbaa !19, !noalias !16
  %conv5.i = add i32 %conv3.i, 1
  %cmp66.i = icmp ult i32 %2, %conv5.i
  br i1 %cmp66.i, label %omp.inner.for.body.lr.ph.i, label %omp.loop.exit.i

omp.inner.for.body.lr.ph.i:                       ; preds = %omp.precond.then.i
  %cmp9.not.not4.i = icmp slt i32 %query_sequence_length.addr.sroa.0.0.extract.trunc, %coarse_match_length.addr.sroa.0.0.extract.trunc
  %cmp111.i = icmp sgt i32 %coarse_match_length.addr.sroa.0.0.extract.trunc, 0
  %3 = load i32, ptr addrspace(5) %.omp.stride.i, align 4, !tbaa !19, !noalias !16
  %4 = add i32 %query_sequence_length.addr.sroa.0.0.extract.trunc, 1
  %5 = sub i32 %4, %coarse_match_length.addr.sroa.0.0.extract.trunc
  br label %omp.inner.for.body.i

omp.inner.for.body.i:                             ; preds = %if.end33.i, %omp.inner.for.body.lr.ph.i
  %.omp.iv.07.i = phi i32 [ %2, %omp.inner.for.body.lr.ph.i ], [ %add34.i, %if.end33.i ]
  br i1 %cmp9.not.not4.i, label %if.end33.i, label %for.cond10.preheader.lr.ph.i

for.cond10.preheader.lr.ph.i:                     ; preds = %omp.inner.for.body.i
  %add14.i = add i32 %.omp.iv.07.i, %current_position.addr.sroa.0.0.extract.trunc
  br label %for.cond10.preheader.i

for.cond.i:                                       ; preds = %for.cond.cleanup12.i
  %inc27.i = add nuw i32 %i.05.i, 1
  %exitcond9.not.i = icmp eq i32 %inc27.i, %5
  br i1 %exitcond9.not.i, label %if.end33.i.loopexit, label %for.cond10.preheader.i, !llvm.loop !23

for.cond10.preheader.i:                           ; preds = %for.cond.i, %for.cond10.preheader.lr.ph.i
  %i.05.i = phi i32 [ 0, %for.cond10.preheader.lr.ph.i ], [ %inc27.i, %for.cond.i ]
  br i1 %cmp111.i, label %for.body13.i.preheader, label %for.cond.cleanup12.i

for.body13.i.preheader:                           ; preds = %for.cond10.preheader.i
  br label %for.body13.i

for.cond.cleanup12.i.loopexit:                    ; preds = %for.body13.i
  %spec.select.i.lcssa = phi i32 [ %spec.select.i, %for.body13.i ]
  br label %for.cond.cleanup12.i

for.cond.cleanup12.i:                             ; preds = %for.cond.cleanup12.i.loopexit, %for.cond10.preheader.i
  %distance.0.lcssa.i = phi i32 [ 0, %for.cond10.preheader.i ], [ %spec.select.i.lcssa, %for.cond.cleanup12.i.loopexit ]
  %cmp23.not.i = icmp slt i32 %distance.0.lcssa.i, %coarse_match_threshold.addr.sroa.0.0.extract.trunc
  br i1 %cmp23.not.i, label %cleanup28.i, label %for.cond.i

for.body13.i:                                     ; preds = %for.body13.i.preheader, %for.body13.i
  %j.03.i = phi i32 [ %inc22.i, %for.body13.i ], [ 0, %for.body13.i.preheader ]
  %distance.02.i = phi i32 [ %spec.select.i, %for.body13.i ], [ 0, %for.body13.i.preheader ]
  %add15.i = add i32 %add14.i, %j.03.i
  %idxprom.i = zext i32 %add15.i to i64
  %arrayidx.i = getelementptr inbounds i8, ptr %target, i64 %idxprom.i
  %6 = load i8, ptr %arrayidx.i, align 1, !tbaa !25, !noalias !16
  %add17.i = add nuw nsw i32 %j.03.i, %i.05.i
  %idxprom18.i = zext i32 %add17.i to i64
  %arrayidx19.i = getelementptr inbounds i8, ptr %query, i64 %idxprom18.i
  %7 = load i8, ptr %arrayidx19.i, align 1, !tbaa !25, !noalias !16
  %cmp21.not.i = icmp ne i8 %6, %7
  %inc.i = zext i1 %cmp21.not.i to i32
  %spec.select.i = add nuw nsw i32 %distance.02.i, %inc.i
  %inc22.i = add nuw nsw i32 %j.03.i, 1
  %exitcond.not.i = icmp eq i32 %inc22.i, %coarse_match_length.addr.sroa.0.0.extract.trunc
  br i1 %exitcond.not.i, label %for.cond.cleanup12.i.loopexit, label %for.body13.i, !llvm.loop !26

cleanup28.i:                                      ; preds = %for.cond.cleanup12.i
  %idxprom31.i = zext i32 %.omp.iv.07.i to i64
  %arrayidx32.i = getelementptr inbounds i8, ptr %batch_result, i64 %idxprom31.i
  store i8 1, ptr %arrayidx32.i, align 1, !tbaa !25, !noalias !16
  br label %if.end33.i

if.end33.i.loopexit:                              ; preds = %for.cond.i
  br label %if.end33.i

if.end33.i:                                       ; preds = %if.end33.i.loopexit, %cleanup28.i, %omp.inner.for.body.i
  %add34.i = add i32 %.omp.iv.07.i, %3
  %cmp6.i = icmp ult i32 %add34.i, %conv5.i
  br i1 %cmp6.i, label %omp.inner.for.body.i, label %omp.loop.exit.i.loopexit, !llvm.loop !45

omp.loop.exit.i.loopexit:                         ; preds = %if.end33.i
  br label %omp.loop.exit.i

omp.loop.exit.i:                                  ; preds = %omp.loop.exit.i.loopexit, %omp.precond.then.i
  tail call void @__kmpc_distribute_static_fini(ptr addrspacecast (ptr addrspace(1) @6 to ptr), i32 %1) #1, !noalias !16
  call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) %.omp.is_last.i) #1, !noalias !16
  call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) %.omp.stride.i) #1, !noalias !16
  call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) %.omp.ub.i) #1, !noalias !16
  call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) %.omp.lb.i) #1, !noalias !16
  br label %__omp_offloading_58_208beb0__Z2gaPKcS0_Pcjiiii_l18_debug___omp_outlined_debug___omp_outlined_debug__.exit

__omp_offloading_58_208beb0__Z2gaPKcS0_Pcjiiii_l18_debug___omp_outlined_debug___omp_outlined_debug__.exit: ; preds = %entry, %omp.loop.exit.i
  ret void
}

; Function Attrs: alwaysinline
declare void @__kmpc_parallel_51(ptr, i32, i32, i32, i32, ptr, ptr, ptr, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @__kmpc_global_thread_num(ptr) local_unnamed_addr #1

declare void @__kmpc_target_deinit() local_unnamed_addr

; Function Attrs: nounwind
declare void @__kmpc_distribute_static_init_4(ptr, i32, i32, ptr nocapture nofree, ptr nocapture nofree, ptr nocapture nofree, ptr nocapture nofree, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @__kmpc_for_static_init_4(ptr, i32, i32, ptr nocapture nofree, ptr nocapture nofree, ptr nocapture nofree, ptr nocapture nofree, i32, i32) local_unnamed_addr #1

; Function Attrs: alwaysinline norecurse nounwind
define internal void @__omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined(ptr noalias nocapture noundef readonly %.global_tid., ptr noalias nocapture readnone %.bound_tid., i64 noundef %.previous.lb., i64 noundef %.previous.ub., ptr nocapture noundef nonnull writeonly align 1 dereferenceable(1024) %d_batch_result, i64 %kBatchSize) #2 {
; CHECK-LABEL: define internal void @__omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined(
; CHECK-SAME: ptr noalias nocapture noundef readonly [[DOTGLOBAL_TID_:%.*]], ptr noalias nocapture readnone [[DOTBOUND_TID_:%.*]], i64 noundef [[DOTPREVIOUS_LB_:%.*]], i64 noundef [[DOTPREVIOUS_UB_:%.*]], ptr nocapture noundef nonnull writeonly align 1 dereferenceable(1024) [[D_BATCH_RESULT:%.*]], i64 [[KBATCHSIZE:%.*]]) #[[ATTR2]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[DOTOMP_LB_I:%.*]] = alloca i32, align 4, addrspace(5)
; CHECK-NEXT:    [[DOTOMP_UB_I:%.*]] = alloca i32, align 4, addrspace(5)
; CHECK-NEXT:    [[DOTOMP_STRIDE_I:%.*]] = alloca i32, align 4, addrspace(5)
; CHECK-NEXT:    [[DOTOMP_IS_LAST_I:%.*]] = alloca i32, align 4, addrspace(5)
; CHECK-NEXT:    [[TMP0:%.*]] = addrspacecast ptr [[D_BATCH_RESULT]] to ptr addrspace(1)
; CHECK-NEXT:    [[DOTGLOBAL_TID__VAL:%.*]] = load i32, ptr [[DOTGLOBAL_TID_]], align 4, !tbaa [[TBAA17]]
; CHECK-NEXT:    tail call void @llvm.experimental.noalias.scope.decl(metadata [[META28:![0-9]+]])
; CHECK-NEXT:    [[DOTOMP_LB_ASCAST_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_LB_I]] to ptr
; CHECK-NEXT:    [[DOTOMP_UB_ASCAST_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_UB_I]] to ptr
; CHECK-NEXT:    [[DOTOMP_STRIDE_ASCAST_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_STRIDE_I]] to ptr
; CHECK-NEXT:    [[DOTOMP_IS_LAST_ASCAST_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_IS_LAST_I]] to ptr
; CHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_LB_I]]) #[[ATTR7]], !noalias [[META28]]
; CHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_UB_I]]) #[[ATTR7]], !noalias [[META28]]
; CHECK-NEXT:    [[CONV_I:%.*]] = trunc i64 [[DOTPREVIOUS_LB_]] to i32
; CHECK-NEXT:    [[CONV2_I:%.*]] = trunc i64 [[DOTPREVIOUS_UB_]] to i32
; CHECK-NEXT:    store i32 [[CONV_I]], ptr addrspace(5) [[DOTOMP_LB_I]], align 4, !tbaa [[TBAA17]], !noalias [[META28]]
; CHECK-NEXT:    store i32 [[CONV2_I]], ptr addrspace(5) [[DOTOMP_UB_I]], align 4, !tbaa [[TBAA17]], !noalias [[META28]]
; CHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_STRIDE_I]]) #[[ATTR7]], !noalias [[META28]]
; CHECK-NEXT:    store i32 1, ptr addrspace(5) [[DOTOMP_STRIDE_I]], align 4, !tbaa [[TBAA17]], !noalias [[META28]]
; CHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_IS_LAST_I]]) #[[ATTR7]], !noalias [[META28]]
; CHECK-NEXT:    store i32 0, ptr addrspace(5) [[DOTOMP_IS_LAST_I]], align 4, !tbaa [[TBAA17]], !noalias [[META28]]
; CHECK-NEXT:    call void @__kmpc_for_static_init_4(ptr addrspacecast (ptr addrspace(1) @[[GLOB12:[0-9]+]] to ptr), i32 [[DOTGLOBAL_TID__VAL]], i32 33, ptr nocapture nonnull [[DOTOMP_IS_LAST_ASCAST_I]], ptr nocapture nonnull [[DOTOMP_LB_ASCAST_I]], ptr nocapture nonnull [[DOTOMP_UB_ASCAST_I]], ptr nocapture nonnull [[DOTOMP_STRIDE_ASCAST_I]], i32 1, i32 1) #[[ATTR1]], !noalias [[META28]]
; CHECK-NEXT:    [[TMP1:%.*]] = load i32, ptr addrspace(5) [[DOTOMP_LB_I]], align 4, !tbaa [[TBAA17]], !noalias [[META28]]
; CHECK-NEXT:    [[CMP_NOT1_I:%.*]] = icmp sgt i32 [[TMP1]], [[CONV2_I]]
; CHECK-NEXT:    br i1 [[CMP_NOT1_I]], label [[__OMP_OFFLOADING_58_208BEB0_MAIN_L83_DEBUG___OMP_OUTLINED_DEBUG___OMP_OUTLINED_DEBUG___EXIT:%.*]], label [[OMP_INNER_FOR_BODY_LR_PH_I:%.*]]
; CHECK:       omp.inner.for.body.lr.ph.i:
; CHECK-NEXT:    [[TMP2:%.*]] = load i32, ptr addrspace(5) [[DOTOMP_STRIDE_I]], align 4, !tbaa [[TBAA17]], !noalias [[META28]]
; CHECK-NEXT:    br label [[OMP_INNER_FOR_BODY_I:%.*]]
; CHECK:       omp.inner.for.body.i:
; CHECK-NEXT:    [[DOTOMP_IV_02_I:%.*]] = phi i32 [ [[TMP1]], [[OMP_INNER_FOR_BODY_LR_PH_I]] ], [ [[ADD4_I:%.*]], [[OMP_INNER_FOR_BODY_I]] ]
; CHECK-NEXT:    [[IDXPROM_I:%.*]] = sext i32 [[DOTOMP_IV_02_I]] to i64
; CHECK-NEXT:    [[ARRAYIDX_I:%.*]] = getelementptr inbounds [1024 x i8], ptr addrspace(1) [[TMP0]], i64 0, i64 [[IDXPROM_I]]
; CHECK-NEXT:    store i8 0, ptr addrspace(1) [[ARRAYIDX_I]], align 1, !tbaa [[TBAA21]], !alias.scope [[META28]]
; CHECK-NEXT:    [[ADD4_I]] = add nsw i32 [[DOTOMP_IV_02_I]], [[TMP2]]
; CHECK-NEXT:    [[CMP_NOT_I:%.*]] = icmp sgt i32 [[ADD4_I]], [[CONV2_I]]
; CHECK-NEXT:    br i1 [[CMP_NOT_I]], label [[__OMP_OFFLOADING_58_208BEB0_MAIN_L83_DEBUG___OMP_OUTLINED_DEBUG___OMP_OUTLINED_DEBUG___EXIT_LOOPEXIT:%.*]], label [[OMP_INNER_FOR_BODY_I]]
; CHECK:       __omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined_debug__.exit.loopexit:
; CHECK-NEXT:    br label [[__OMP_OFFLOADING_58_208BEB0_MAIN_L83_DEBUG___OMP_OUTLINED_DEBUG___OMP_OUTLINED_DEBUG___EXIT]]
; CHECK:       __omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined_debug__.exit:
; CHECK-NEXT:    tail call void @__kmpc_distribute_static_fini(ptr addrspacecast (ptr addrspace(1) @[[GLOB14:[0-9]+]] to ptr), i32 [[DOTGLOBAL_TID__VAL]]) #[[ATTR1]], !noalias [[META28]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_IS_LAST_I]]) #[[ATTR1]], !noalias [[META28]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_STRIDE_I]]) #[[ATTR1]], !noalias [[META28]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_UB_I]]) #[[ATTR1]], !noalias [[META28]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_LB_I]]) #[[ATTR1]], !noalias [[META28]]
; CHECK-NEXT:    ret void
;
; DRCHECK-LABEL: define internal void @__omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined(
; DRCHECK-SAME: ptr noalias nocapture noundef readonly [[DOTGLOBAL_TID_:%.*]], ptr noalias nocapture readnone [[DOTBOUND_TID_:%.*]], i64 noundef [[DOTPREVIOUS_LB_:%.*]], i64 noundef [[DOTPREVIOUS_UB_:%.*]], ptr nocapture noundef nonnull writeonly align 1 dereferenceable(1024) [[D_BATCH_RESULT:%.*]], i64 [[KBATCHSIZE:%.*]]) #[[ATTR2]] {
; DRCHECK-NEXT:  entry:
; DRCHECK-NEXT:    [[DOTOMP_LB_I:%.*]] = alloca i32, align 4, addrspace(5)
; DRCHECK-NEXT:    [[DOTOMP_UB_I:%.*]] = alloca i32, align 4, addrspace(5)
; DRCHECK-NEXT:    [[DOTOMP_STRIDE_I:%.*]] = alloca i32, align 4, addrspace(5)
; DRCHECK-NEXT:    [[DOTOMP_IS_LAST_I:%.*]] = alloca i32, align 4, addrspace(5)
; DRCHECK-NEXT:    [[TMP0:%.*]] = addrspacecast ptr [[D_BATCH_RESULT]] to ptr addrspace(1)
; DRCHECK-NEXT:    [[DOTGLOBAL_TID__VAL:%.*]] = load i32, ptr [[DOTGLOBAL_TID_]], align 4, !tbaa [[TBAA17]]
; DRCHECK-NEXT:    tail call void @llvm.experimental.noalias.scope.decl(metadata [[META28:![0-9]+]])
; DRCHECK-NEXT:    [[DOTOMP_LB_ASCAST_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_LB_I]] to ptr
; DRCHECK-NEXT:    [[DOTOMP_UB_ASCAST_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_UB_I]] to ptr
; DRCHECK-NEXT:    [[DOTOMP_STRIDE_ASCAST_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_STRIDE_I]] to ptr
; DRCHECK-NEXT:    [[DOTOMP_IS_LAST_ASCAST_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_IS_LAST_I]] to ptr
; DRCHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_LB_I]]) #[[ATTR7]], !noalias [[META28]]
; DRCHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_UB_I]]) #[[ATTR7]], !noalias [[META28]]
; DRCHECK-NEXT:    [[CONV_I:%.*]] = trunc i64 [[DOTPREVIOUS_LB_]] to i32
; DRCHECK-NEXT:    [[CONV2_I:%.*]] = trunc i64 [[DOTPREVIOUS_UB_]] to i32
; DRCHECK-NEXT:    store i32 [[CONV_I]], ptr addrspace(5) [[DOTOMP_LB_I]], align 4, !tbaa [[TBAA17]], !noalias [[META28]]
; DRCHECK-NEXT:    store i32 [[CONV2_I]], ptr addrspace(5) [[DOTOMP_UB_I]], align 4, !tbaa [[TBAA17]], !noalias [[META28]]
; DRCHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_STRIDE_I]]) #[[ATTR7]], !noalias [[META28]]
; DRCHECK-NEXT:    store i32 1, ptr addrspace(5) [[DOTOMP_STRIDE_I]], align 4, !tbaa [[TBAA17]], !noalias [[META28]]
; DRCHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_IS_LAST_I]]) #[[ATTR7]], !noalias [[META28]]
; DRCHECK-NEXT:    store i32 0, ptr addrspace(5) [[DOTOMP_IS_LAST_I]], align 4, !tbaa [[TBAA17]], !noalias [[META28]]
; DRCHECK-NEXT:    call void @__kmpc_for_static_init_4(ptr addrspacecast (ptr addrspace(1) @[[GLOB12:[0-9]+]] to ptr), i32 [[DOTGLOBAL_TID__VAL]], i32 33, ptr nocapture nonnull [[DOTOMP_IS_LAST_ASCAST_I]], ptr nocapture nonnull [[DOTOMP_LB_ASCAST_I]], ptr nocapture nonnull [[DOTOMP_UB_ASCAST_I]], ptr nocapture nonnull [[DOTOMP_STRIDE_ASCAST_I]], i32 1, i32 1) #[[ATTR1]], !noalias [[META28]]
; DRCHECK-NEXT:    [[TMP1:%.*]] = load i32, ptr addrspace(5) [[DOTOMP_LB_I]], align 4, !tbaa [[TBAA17]], !noalias [[META28]]
; DRCHECK-NEXT:    [[CMP_NOT1_I:%.*]] = icmp sgt i32 [[TMP1]], [[CONV2_I]]
; DRCHECK-NEXT:    br i1 [[CMP_NOT1_I]], label [[__OMP_OFFLOADING_58_208BEB0_MAIN_L83_DEBUG___OMP_OUTLINED_DEBUG___OMP_OUTLINED_DEBUG___EXIT:%.*]], label [[OMP_INNER_FOR_BODY_LR_PH_I:%.*]]
; DRCHECK:       omp.inner.for.body.lr.ph.i:
; DRCHECK-NEXT:    [[TMP2:%.*]] = load i32, ptr addrspace(5) [[DOTOMP_STRIDE_I]], align 4, !tbaa [[TBAA17]], !noalias [[META28]]
; DRCHECK-NEXT:    br label [[OMP_INNER_FOR_BODY_I:%.*]]
; DRCHECK:       omp.inner.for.body.i:
; DRCHECK-NEXT:    [[DOTOMP_IV_02_I:%.*]] = phi i32 [ [[TMP1]], [[OMP_INNER_FOR_BODY_LR_PH_I]] ], [ [[ADD4_I:%.*]], [[OMP_INNER_FOR_BODY_I]] ]
; DRCHECK-NEXT:    [[IDXPROM_I:%.*]] = sext i32 [[DOTOMP_IV_02_I]] to i64
; DRCHECK-NEXT:    [[ARRAYIDX_I:%.*]] = getelementptr inbounds [1024 x i8], ptr addrspace(1) [[TMP0]], i64 0, i64 [[IDXPROM_I]]
; DRCHECK-NEXT:    store i8 0, ptr addrspace(1) [[ARRAYIDX_I]], align 1, !tbaa [[TBAA23]], !alias.scope [[META28]]
; DRCHECK-NEXT:    [[ADD4_I]] = add nsw i32 [[DOTOMP_IV_02_I]], [[TMP2]]
; DRCHECK-NEXT:    [[CMP_NOT_I:%.*]] = icmp sgt i32 [[ADD4_I]], [[CONV2_I]]
; DRCHECK-NEXT:    br i1 [[CMP_NOT_I]], label [[__OMP_OFFLOADING_58_208BEB0_MAIN_L83_DEBUG___OMP_OUTLINED_DEBUG___OMP_OUTLINED_DEBUG___EXIT_LOOPEXIT:%.*]], label [[OMP_INNER_FOR_BODY_I]]
; DRCHECK:       __omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined_debug__.exit.loopexit:
; DRCHECK-NEXT:    br label [[__OMP_OFFLOADING_58_208BEB0_MAIN_L83_DEBUG___OMP_OUTLINED_DEBUG___OMP_OUTLINED_DEBUG___EXIT]]
; DRCHECK:       __omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined_debug__.exit:
; DRCHECK-NEXT:    tail call void @__kmpc_distribute_static_fini(ptr addrspacecast (ptr addrspace(1) @[[GLOB14:[0-9]+]] to ptr), i32 [[DOTGLOBAL_TID__VAL]]) #[[ATTR1]], !noalias [[META28]]
; DRCHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_IS_LAST_I]]) #[[ATTR1]], !noalias [[META28]]
; DRCHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_STRIDE_I]]) #[[ATTR1]], !noalias [[META28]]
; DRCHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_UB_I]]) #[[ATTR1]], !noalias [[META28]]
; DRCHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_LB_I]]) #[[ATTR1]], !noalias [[META28]]
; DRCHECK-NEXT:    ret void
;
entry:
  %.omp.lb.i = alloca i32, align 4, addrspace(5)
  %.omp.ub.i = alloca i32, align 4, addrspace(5)
  %.omp.stride.i = alloca i32, align 4, addrspace(5)
  %.omp.is_last.i = alloca i32, align 4, addrspace(5)
  %0 = addrspacecast ptr %d_batch_result to ptr addrspace(1)
  %.global_tid..val = load i32, ptr %.global_tid., align 4, !tbaa !19
  tail call void @llvm.experimental.noalias.scope.decl(metadata !33)
  %.omp.lb.ascast.i = addrspacecast ptr addrspace(5) %.omp.lb.i to ptr
  %.omp.ub.ascast.i = addrspacecast ptr addrspace(5) %.omp.ub.i to ptr
  %.omp.stride.ascast.i = addrspacecast ptr addrspace(5) %.omp.stride.i to ptr
  %.omp.is_last.ascast.i = addrspacecast ptr addrspace(5) %.omp.is_last.i to ptr
  call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) %.omp.lb.i) #7, !noalias !33
  call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) %.omp.ub.i) #7, !noalias !33
  %conv.i = trunc i64 %.previous.lb. to i32
  %conv2.i = trunc i64 %.previous.ub. to i32
  store i32 %conv.i, ptr addrspace(5) %.omp.lb.i, align 4, !tbaa !19, !noalias !33
  store i32 %conv2.i, ptr addrspace(5) %.omp.ub.i, align 4, !tbaa !19, !noalias !33
  call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) %.omp.stride.i) #7, !noalias !33
  store i32 1, ptr addrspace(5) %.omp.stride.i, align 4, !tbaa !19, !noalias !33
  call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) %.omp.is_last.i) #7, !noalias !33
  store i32 0, ptr addrspace(5) %.omp.is_last.i, align 4, !tbaa !19, !noalias !33
  call void @__kmpc_for_static_init_4(ptr addrspacecast (ptr addrspace(1) @12 to ptr), i32 %.global_tid..val, i32 33, ptr nocapture nonnull %.omp.is_last.ascast.i, ptr nocapture nonnull %.omp.lb.ascast.i, ptr nocapture nonnull %.omp.ub.ascast.i, ptr nocapture nonnull %.omp.stride.ascast.i, i32 1, i32 1) #1, !noalias !33
  %1 = load i32, ptr addrspace(5) %.omp.lb.i, align 4, !tbaa !19, !noalias !33
  %cmp.not1.i = icmp sgt i32 %1, %conv2.i
  br i1 %cmp.not1.i, label %__omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined_debug__.exit, label %omp.inner.for.body.lr.ph.i

omp.inner.for.body.lr.ph.i:                       ; preds = %entry
  %2 = load i32, ptr addrspace(5) %.omp.stride.i, align 4, !tbaa !19, !noalias !33
  br label %omp.inner.for.body.i

omp.inner.for.body.i:                             ; preds = %omp.inner.for.body.i, %omp.inner.for.body.lr.ph.i
  %.omp.iv.02.i = phi i32 [ %1, %omp.inner.for.body.lr.ph.i ], [ %add4.i, %omp.inner.for.body.i ]
  %idxprom.i = sext i32 %.omp.iv.02.i to i64
  %arrayidx.i = getelementptr inbounds [1024 x i8], ptr addrspace(1) %0, i64 0, i64 %idxprom.i
  store i8 0, ptr addrspace(1) %arrayidx.i, align 1, !tbaa !25, !alias.scope !33
  %add4.i = add nsw i32 %.omp.iv.02.i, %2
  %cmp.not.i = icmp sgt i32 %add4.i, %conv2.i
  br i1 %cmp.not.i, label %__omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined_debug__.exit.loopexit, label %omp.inner.for.body.i

__omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined_debug__.exit.loopexit: ; preds = %omp.inner.for.body.i
  br label %__omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined_debug__.exit

__omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined_debug__.exit: ; preds = %__omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined_debug__.exit.loopexit, %entry
  tail call void @__kmpc_distribute_static_fini(ptr addrspacecast (ptr addrspace(1) @14 to ptr), i32 %.global_tid..val) #1, !noalias !33
  call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) %.omp.is_last.i) #1, !noalias !33
  call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) %.omp.stride.i) #1, !noalias !33
  call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) %.omp.ub.i) #1, !noalias !33
  call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) %.omp.lb.i) #1, !noalias !33
  ret void
}

; Function Attrs: alwaysinline norecurse nounwind
define weak_odr protected amdgpu_kernel void @__omp_offloading_58_208beb0_main_l83(ptr noundef nonnull align 1 dereferenceable(1024) %d_batch_result, i64 noundef %kBatchSize) local_unnamed_addr #4 {
; CHECK-LABEL: define weak_odr protected amdgpu_kernel void @__omp_offloading_58_208beb0_main_l83(
; CHECK-SAME: ptr noundef nonnull align 1 dereferenceable(1024) [[D_BATCH_RESULT:%.*]], i64 noundef [[KBATCHSIZE:%.*]]) local_unnamed_addr #[[ATTR4:[0-9]+]] {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[DOTOMP_COMB_LB_I_I_I:%.*]] = alloca i32, align 4, addrspace(5)
; CHECK-NEXT:    [[DOTOMP_COMB_UB_I_I_I:%.*]] = alloca i32, align 4, addrspace(5)
; CHECK-NEXT:    [[DOTOMP_STRIDE_I_I_I:%.*]] = alloca i32, align 4, addrspace(5)
; CHECK-NEXT:    [[DOTOMP_IS_LAST_I_I_I:%.*]] = alloca i32, align 4, addrspace(5)
; CHECK-NEXT:    [[CAPTURED_VARS_ADDRS_I_I_I:%.*]] = alloca [4 x ptr], align 8, addrspace(5)
; CHECK-NEXT:    [[TMP0:%.*]] = tail call i32 @__kmpc_target_init(ptr addrspacecast (ptr addrspace(1) @__omp_offloading_58_208beb0_main_l83_kernel_environment to ptr)) #[[ATTR1]], !noalias [[META31:![0-9]+]]
; CHECK-NEXT:    [[EXEC_USER_CODE_I:%.*]] = icmp eq i32 [[TMP0]], -1
; CHECK-NEXT:    br i1 [[EXEC_USER_CODE_I]], label [[USER_CODE_ENTRY_I:%.*]], label [[__OMP_OFFLOADING_58_208BEB0_MAIN_L83_DEBUG___EXIT:%.*]]
; CHECK:       user_code.entry.i:
; CHECK-NEXT:    [[TMP1:%.*]] = tail call i32 @__kmpc_global_thread_num(ptr addrspacecast (ptr addrspace(1) @[[GLOB15:[0-9]+]] to ptr)) #[[ATTR1]], !noalias [[META31]]
; CHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 32, ptr addrspace(5) [[CAPTURED_VARS_ADDRS_I_I_I]]), !noalias [[META31]]
; CHECK-NEXT:    [[DOTOMP_COMB_LB_ASCAST_I_I_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_COMB_LB_I_I_I]] to ptr
; CHECK-NEXT:    [[DOTOMP_COMB_UB_ASCAST_I_I_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_COMB_UB_I_I_I]] to ptr
; CHECK-NEXT:    [[DOTOMP_STRIDE_ASCAST_I_I_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_STRIDE_I_I_I]] to ptr
; CHECK-NEXT:    [[DOTOMP_IS_LAST_ASCAST_I_I_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_IS_LAST_I_I_I]] to ptr
; CHECK-NEXT:    [[CAPTURED_VARS_ADDRS_ASCAST_I_I_I:%.*]] = addrspacecast ptr addrspace(5) [[CAPTURED_VARS_ADDRS_I_I_I]] to ptr
; CHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_COMB_LB_I_I_I]]) #[[ATTR7]], !noalias [[META34:![0-9]+]]
; CHECK-NEXT:    store i32 0, ptr addrspace(5) [[DOTOMP_COMB_LB_I_I_I]], align 4, !tbaa [[TBAA17]], !noalias [[META34]]
; CHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_COMB_UB_I_I_I]]) #[[ATTR7]], !noalias [[META34]]
; CHECK-NEXT:    store i32 1023, ptr addrspace(5) [[DOTOMP_COMB_UB_I_I_I]], align 4, !tbaa [[TBAA17]], !noalias [[META34]]
; CHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_STRIDE_I_I_I]]) #[[ATTR7]], !noalias [[META34]]
; CHECK-NEXT:    store i32 1, ptr addrspace(5) [[DOTOMP_STRIDE_I_I_I]], align 4, !tbaa [[TBAA17]], !noalias [[META34]]
; CHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_IS_LAST_I_I_I]]) #[[ATTR7]], !noalias [[META34]]
; CHECK-NEXT:    store i32 0, ptr addrspace(5) [[DOTOMP_IS_LAST_I_I_I]], align 4, !tbaa [[TBAA17]], !noalias [[META34]]
; CHECK-NEXT:    [[NVPTX_NUM_THREADS_I_I_I:%.*]] = tail call i32 @__kmpc_get_hardware_num_threads_in_block() #[[ATTR1]], !noalias [[META34]]
; CHECK-NEXT:    call void @__kmpc_distribute_static_init_4(ptr addrspacecast (ptr addrspace(1) @[[GLOB11:[0-9]+]] to ptr), i32 [[TMP1]], i32 91, ptr nocapture nonnull [[DOTOMP_IS_LAST_ASCAST_I_I_I]], ptr nocapture nonnull [[DOTOMP_COMB_LB_ASCAST_I_I_I]], ptr nocapture nonnull [[DOTOMP_COMB_UB_ASCAST_I_I_I]], ptr nocapture nonnull [[DOTOMP_STRIDE_ASCAST_I_I_I]], i32 1, i32 [[NVPTX_NUM_THREADS_I_I_I]]) #[[ATTR1]], !noalias [[META34]]
; CHECK-NEXT:    [[DOTOMP_COMB_LB_PROMOTED_I_I_I:%.*]] = load i32, ptr addrspace(5) [[DOTOMP_COMB_LB_I_I_I]], align 4, !noalias [[META34]]
; CHECK-NEXT:    [[CMP22_I_I_I:%.*]] = icmp slt i32 [[DOTOMP_COMB_LB_PROMOTED_I_I_I]], 1024
; CHECK-NEXT:    br i1 [[CMP22_I_I_I]], label [[OMP_INNER_FOR_BODY_LR_PH_I_I_I:%.*]], label [[__OMP_OFFLOADING_58_208BEB0_MAIN_L83_DEBUG___OMP_OUTLINED_EXIT_I:%.*]]
; CHECK:       omp.inner.for.body.lr.ph.i.i.i:
; CHECK-NEXT:    [[KBATCHSIZE_CASTED_SROA_0_0_INSERT_EXT_I:%.*]] = and i64 [[KBATCHSIZE]], 4294967295
; CHECK-NEXT:    [[TMP2:%.*]] = load i32, ptr addrspace(5) [[DOTOMP_COMB_UB_I_I_I]], align 4, !noalias [[META34]]
; CHECK-NEXT:    [[COND_I_I_I:%.*]] = tail call i32 @llvm.smin.i32(i32 [[TMP2]], i32 1023), !range [[RNG38:![0-9]+]]
; CHECK-NEXT:    [[TMP3:%.*]] = getelementptr inbounds [4 x ptr], ptr addrspace(5) [[CAPTURED_VARS_ADDRS_I_I_I]], i32 0, i32 1
; CHECK-NEXT:    [[TMP4:%.*]] = getelementptr inbounds [4 x ptr], ptr addrspace(5) [[CAPTURED_VARS_ADDRS_I_I_I]], i32 0, i32 2
; CHECK-NEXT:    [[TMP5:%.*]] = getelementptr inbounds [4 x ptr], ptr addrspace(5) [[CAPTURED_VARS_ADDRS_I_I_I]], i32 0, i32 3
; CHECK-NEXT:    [[TMP6:%.*]] = inttoptr i64 [[KBATCHSIZE_CASTED_SROA_0_0_INSERT_EXT_I]] to ptr
; CHECK-NEXT:    [[TMP7:%.*]] = load i32, ptr addrspace(5) [[DOTOMP_STRIDE_I_I_I]], align 4, !noalias [[META34]]
; CHECK-NEXT:    br label [[OMP_INNER_FOR_BODY_I_I_I:%.*]]
; CHECK:       omp.inner.for.body.i.i.i:
; CHECK-NEXT:    [[STOREMERGE4_I_I_I:%.*]] = phi i32 [ [[COND_I_I_I]], [[OMP_INNER_FOR_BODY_LR_PH_I_I_I]] ], [ [[COND9_I_I_I:%.*]], [[OMP_INNER_FOR_BODY_I_I_I]] ]
; CHECK-NEXT:    [[ADD313_I_I_I:%.*]] = phi i32 [ [[DOTOMP_COMB_LB_PROMOTED_I_I_I]], [[OMP_INNER_FOR_BODY_LR_PH_I_I_I]] ], [ [[ADD3_I_I_I:%.*]], [[OMP_INNER_FOR_BODY_I_I_I]] ]
; CHECK-NEXT:    [[TMP8:%.*]] = zext i32 [[ADD313_I_I_I]] to i64
; CHECK-NEXT:    [[TMP9:%.*]] = zext i32 [[STOREMERGE4_I_I_I]] to i64
; CHECK-NEXT:    [[TMP10:%.*]] = inttoptr i64 [[TMP8]] to ptr
; CHECK-NEXT:    store ptr [[TMP10]], ptr addrspace(5) [[CAPTURED_VARS_ADDRS_I_I_I]], align 8, !tbaa [[TBAA39:![0-9]+]], !noalias [[META34]]
; CHECK-NEXT:    [[TMP11:%.*]] = inttoptr i64 [[TMP9]] to ptr
; CHECK-NEXT:    store ptr [[TMP11]], ptr addrspace(5) [[TMP3]], align 8, !tbaa [[TBAA39]], !noalias [[META34]]
; CHECK-NEXT:    store ptr [[D_BATCH_RESULT]], ptr addrspace(5) [[TMP4]], align 8, !tbaa [[TBAA39]], !noalias [[META34]]
; CHECK-NEXT:    store ptr [[TMP6]], ptr addrspace(5) [[TMP5]], align 8, !tbaa [[TBAA39]], !noalias [[META34]]
; CHECK-NEXT:    call void @__kmpc_parallel_51(ptr addrspacecast (ptr addrspace(1) @[[GLOB15]] to ptr), i32 [[TMP1]], i32 1, i32 -1, i32 -1, ptr nonnull @__omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined, ptr null, ptr nonnull [[CAPTURED_VARS_ADDRS_ASCAST_I_I_I]], i64 4) #[[ATTR1]], !noalias [[META41:![0-9]+]]
; CHECK-NEXT:    [[ADD3_I_I_I]] = add nsw i32 [[ADD313_I_I_I]], [[TMP7]]
; CHECK-NEXT:    [[ADD4_I_I_I:%.*]] = add nsw i32 [[STOREMERGE4_I_I_I]], [[TMP7]]
; CHECK-NEXT:    [[COND9_I_I_I]] = call i32 @llvm.smin.i32(i32 [[ADD4_I_I_I]], i32 1023)
; CHECK-NEXT:    [[CMP2_I_I_I:%.*]] = icmp slt i32 [[ADD3_I_I_I]], 1024
; CHECK-NEXT:    br i1 [[CMP2_I_I_I]], label [[OMP_INNER_FOR_BODY_I_I_I]], label [[__OMP_OFFLOADING_58_208BEB0_MAIN_L83_DEBUG___OMP_OUTLINED_EXIT_I_LOOPEXIT:%.*]]
; CHECK:       __omp_offloading_58_208beb0_main_l83_debug___omp_outlined.exit.i.loopexit:
; CHECK-NEXT:    br label [[__OMP_OFFLOADING_58_208BEB0_MAIN_L83_DEBUG___OMP_OUTLINED_EXIT_I]]
; CHECK:       __omp_offloading_58_208beb0_main_l83_debug___omp_outlined.exit.i:
; CHECK-NEXT:    call void @__kmpc_distribute_static_fini(ptr addrspacecast (ptr addrspace(1) @[[GLOB14]] to ptr), i32 [[TMP1]]) #[[ATTR1]], !noalias [[META41]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_IS_LAST_I_I_I]]) #[[ATTR1]], !noalias [[META34]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_STRIDE_I_I_I]]) #[[ATTR1]], !noalias [[META34]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_COMB_UB_I_I_I]]) #[[ATTR1]], !noalias [[META34]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_COMB_LB_I_I_I]]) #[[ATTR1]], !noalias [[META34]]
; CHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 32, ptr addrspace(5) [[CAPTURED_VARS_ADDRS_I_I_I]]), !noalias [[META31]]
; CHECK-NEXT:    call void @__kmpc_target_deinit() #[[ATTR1]]
; CHECK-NEXT:    br label [[__OMP_OFFLOADING_58_208BEB0_MAIN_L83_DEBUG___EXIT]]
; CHECK:       __omp_offloading_58_208beb0_main_l83_debug__.exit:
; CHECK-NEXT:    ret void
;
; DRCHECK-LABEL: define weak_odr protected amdgpu_kernel void @__omp_offloading_58_208beb0_main_l83(
; DRCHECK-SAME: ptr noundef nonnull align 1 dereferenceable(1024) [[D_BATCH_RESULT:%.*]], i64 noundef [[KBATCHSIZE:%.*]]) local_unnamed_addr #[[ATTR4:[0-9]+]] {
; DRCHECK-NEXT:  entry:
; DRCHECK-NEXT:    [[DOTOMP_COMB_LB_I_I_I:%.*]] = alloca i32, align 4, addrspace(5)
; DRCHECK-NEXT:    [[DOTOMP_COMB_UB_I_I_I:%.*]] = alloca i32, align 4, addrspace(5)
; DRCHECK-NEXT:    [[DOTOMP_STRIDE_I_I_I:%.*]] = alloca i32, align 4, addrspace(5)
; DRCHECK-NEXT:    [[DOTOMP_IS_LAST_I_I_I:%.*]] = alloca i32, align 4, addrspace(5)
; DRCHECK-NEXT:    [[CAPTURED_VARS_ADDRS_I_I_I:%.*]] = alloca [4 x ptr], align 8, addrspace(5)
; DRCHECK-NEXT:    [[TMP0:%.*]] = tail call i32 @__kmpc_target_init(ptr addrspacecast (ptr addrspace(1) @__omp_offloading_58_208beb0_main_l83_kernel_environment to ptr)) #[[ATTR1]], !noalias [[META31:![0-9]+]]
; DRCHECK-NEXT:    [[EXEC_USER_CODE_I:%.*]] = icmp eq i32 [[TMP0]], -1
; DRCHECK-NEXT:    br i1 [[EXEC_USER_CODE_I]], label [[USER_CODE_ENTRY_I:%.*]], label [[__OMP_OFFLOADING_58_208BEB0_MAIN_L83_DEBUG___EXIT:%.*]]
; DRCHECK:       user_code.entry.i:
; DRCHECK-NEXT:    [[TMP1:%.*]] = tail call i32 @__kmpc_global_thread_num(ptr addrspacecast (ptr addrspace(1) @[[GLOB15:[0-9]+]] to ptr)) #[[ATTR1]], !noalias [[META31]]
; DRCHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 32, ptr addrspace(5) [[CAPTURED_VARS_ADDRS_I_I_I]]), !noalias [[META31]]
; DRCHECK-NEXT:    [[DOTOMP_COMB_LB_ASCAST_I_I_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_COMB_LB_I_I_I]] to ptr
; DRCHECK-NEXT:    [[DOTOMP_COMB_UB_ASCAST_I_I_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_COMB_UB_I_I_I]] to ptr
; DRCHECK-NEXT:    [[DOTOMP_STRIDE_ASCAST_I_I_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_STRIDE_I_I_I]] to ptr
; DRCHECK-NEXT:    [[DOTOMP_IS_LAST_ASCAST_I_I_I:%.*]] = addrspacecast ptr addrspace(5) [[DOTOMP_IS_LAST_I_I_I]] to ptr
; DRCHECK-NEXT:    [[CAPTURED_VARS_ADDRS_ASCAST_I_I_I:%.*]] = addrspacecast ptr addrspace(5) [[CAPTURED_VARS_ADDRS_I_I_I]] to ptr
; DRCHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_COMB_LB_I_I_I]]) #[[ATTR7]], !noalias [[META34:![0-9]+]]
; DRCHECK-NEXT:    store i32 0, ptr addrspace(5) [[DOTOMP_COMB_LB_I_I_I]], align 4, !tbaa [[TBAA17]], !noalias [[META34]]
; DRCHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_COMB_UB_I_I_I]]) #[[ATTR7]], !noalias [[META34]]
; DRCHECK-NEXT:    store i32 1023, ptr addrspace(5) [[DOTOMP_COMB_UB_I_I_I]], align 4, !tbaa [[TBAA17]], !noalias [[META34]]
; DRCHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_STRIDE_I_I_I]]) #[[ATTR7]], !noalias [[META34]]
; DRCHECK-NEXT:    store i32 1, ptr addrspace(5) [[DOTOMP_STRIDE_I_I_I]], align 4, !tbaa [[TBAA17]], !noalias [[META34]]
; DRCHECK-NEXT:    call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) [[DOTOMP_IS_LAST_I_I_I]]) #[[ATTR7]], !noalias [[META34]]
; DRCHECK-NEXT:    store i32 0, ptr addrspace(5) [[DOTOMP_IS_LAST_I_I_I]], align 4, !tbaa [[TBAA17]], !noalias [[META34]]
; DRCHECK-NEXT:    [[NVPTX_NUM_THREADS_I_I_I:%.*]] = tail call i32 @__kmpc_get_hardware_num_threads_in_block() #[[ATTR1]], !noalias [[META34]]
; DRCHECK-NEXT:    call void @__kmpc_distribute_static_init_4(ptr addrspacecast (ptr addrspace(1) @[[GLOB11:[0-9]+]] to ptr), i32 [[TMP1]], i32 91, ptr nocapture nonnull [[DOTOMP_IS_LAST_ASCAST_I_I_I]], ptr nocapture nonnull [[DOTOMP_COMB_LB_ASCAST_I_I_I]], ptr nocapture nonnull [[DOTOMP_COMB_UB_ASCAST_I_I_I]], ptr nocapture nonnull [[DOTOMP_STRIDE_ASCAST_I_I_I]], i32 1, i32 [[NVPTX_NUM_THREADS_I_I_I]]) #[[ATTR1]], !noalias [[META34]]
; DRCHECK-NEXT:    [[DOTOMP_COMB_LB_PROMOTED_I_I_I:%.*]] = load i32, ptr addrspace(5) [[DOTOMP_COMB_LB_I_I_I]], align 4, !noalias [[META34]]
; DRCHECK-NEXT:    [[CMP22_I_I_I:%.*]] = icmp slt i32 [[DOTOMP_COMB_LB_PROMOTED_I_I_I]], 1024
; DRCHECK-NEXT:    br i1 [[CMP22_I_I_I]], label [[OMP_INNER_FOR_BODY_LR_PH_I_I_I:%.*]], label [[__OMP_OFFLOADING_58_208BEB0_MAIN_L83_DEBUG___OMP_OUTLINED_EXIT_I:%.*]]
; DRCHECK:       omp.inner.for.body.lr.ph.i.i.i:
; DRCHECK-NEXT:    [[KBATCHSIZE_CASTED_SROA_0_0_INSERT_EXT_I:%.*]] = and i64 [[KBATCHSIZE]], 4294967295
; DRCHECK-NEXT:    [[TMP2:%.*]] = load i32, ptr addrspace(5) [[DOTOMP_COMB_UB_I_I_I]], align 4, !noalias [[META34]]
; DRCHECK-NEXT:    [[COND_I_I_I:%.*]] = tail call i32 @llvm.smin.i32(i32 [[TMP2]], i32 1023), !range [[RNG38:![0-9]+]]
; DRCHECK-NEXT:    [[TMP3:%.*]] = getelementptr inbounds [4 x ptr], ptr addrspace(5) [[CAPTURED_VARS_ADDRS_I_I_I]], i32 0, i32 1
; DRCHECK-NEXT:    [[TMP4:%.*]] = getelementptr inbounds [4 x ptr], ptr addrspace(5) [[CAPTURED_VARS_ADDRS_I_I_I]], i32 0, i32 2
; DRCHECK-NEXT:    [[TMP5:%.*]] = getelementptr inbounds [4 x ptr], ptr addrspace(5) [[CAPTURED_VARS_ADDRS_I_I_I]], i32 0, i32 3
; DRCHECK-NEXT:    [[TMP6:%.*]] = inttoptr i64 [[KBATCHSIZE_CASTED_SROA_0_0_INSERT_EXT_I]] to ptr
; DRCHECK-NEXT:    [[TMP7:%.*]] = load i32, ptr addrspace(5) [[DOTOMP_STRIDE_I_I_I]], align 4, !noalias [[META34]]
; DRCHECK-NEXT:    br label [[OMP_INNER_FOR_BODY_I_I_I:%.*]]
; DRCHECK:       omp.inner.for.body.i.i.i:
; DRCHECK-NEXT:    [[STOREMERGE4_I_I_I:%.*]] = phi i32 [ [[COND_I_I_I]], [[OMP_INNER_FOR_BODY_LR_PH_I_I_I]] ], [ [[COND9_I_I_I:%.*]], [[OMP_INNER_FOR_BODY_I_I_I]] ]
; DRCHECK-NEXT:    [[ADD313_I_I_I:%.*]] = phi i32 [ [[DOTOMP_COMB_LB_PROMOTED_I_I_I]], [[OMP_INNER_FOR_BODY_LR_PH_I_I_I]] ], [ [[ADD3_I_I_I:%.*]], [[OMP_INNER_FOR_BODY_I_I_I]] ]
; DRCHECK-NEXT:    [[TMP8:%.*]] = zext i32 [[ADD313_I_I_I]] to i64
; DRCHECK-NEXT:    [[TMP9:%.*]] = zext i32 [[STOREMERGE4_I_I_I]] to i64
; DRCHECK-NEXT:    [[TMP10:%.*]] = inttoptr i64 [[TMP8]] to ptr
; DRCHECK-NEXT:    store ptr [[TMP10]], ptr addrspace(5) [[CAPTURED_VARS_ADDRS_I_I_I]], align 8, !tbaa [[TBAA39:![0-9]+]], !noalias [[META34]]
; DRCHECK-NEXT:    [[TMP11:%.*]] = inttoptr i64 [[TMP9]] to ptr
; DRCHECK-NEXT:    store ptr [[TMP11]], ptr addrspace(5) [[TMP3]], align 8, !tbaa [[TBAA39]], !noalias [[META34]]
; DRCHECK-NEXT:    store ptr [[D_BATCH_RESULT]], ptr addrspace(5) [[TMP4]], align 8, !tbaa [[TBAA39]], !noalias [[META34]]
; DRCHECK-NEXT:    store ptr [[TMP6]], ptr addrspace(5) [[TMP5]], align 8, !tbaa [[TBAA39]], !noalias [[META34]]
; DRCHECK-NEXT:    call void @__kmpc_parallel_51(ptr addrspacecast (ptr addrspace(1) @[[GLOB15]] to ptr), i32 [[TMP1]], i32 1, i32 -1, i32 -1, ptr nonnull @__omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined, ptr null, ptr nonnull [[CAPTURED_VARS_ADDRS_ASCAST_I_I_I]], i64 4) #[[ATTR1]], !noalias [[META41:![0-9]+]]
; DRCHECK-NEXT:    [[ADD3_I_I_I]] = add nsw i32 [[ADD313_I_I_I]], [[TMP7]]
; DRCHECK-NEXT:    [[ADD4_I_I_I:%.*]] = add nsw i32 [[STOREMERGE4_I_I_I]], [[TMP7]]
; DRCHECK-NEXT:    [[COND9_I_I_I]] = call i32 @llvm.smin.i32(i32 [[ADD4_I_I_I]], i32 1023)
; DRCHECK-NEXT:    [[CMP2_I_I_I:%.*]] = icmp slt i32 [[ADD3_I_I_I]], 1024
; DRCHECK-NEXT:    br i1 [[CMP2_I_I_I]], label [[OMP_INNER_FOR_BODY_I_I_I]], label [[__OMP_OFFLOADING_58_208BEB0_MAIN_L83_DEBUG___OMP_OUTLINED_EXIT_I_LOOPEXIT:%.*]]
; DRCHECK:       __omp_offloading_58_208beb0_main_l83_debug___omp_outlined.exit.i.loopexit:
; DRCHECK-NEXT:    br label [[__OMP_OFFLOADING_58_208BEB0_MAIN_L83_DEBUG___OMP_OUTLINED_EXIT_I]]
; DRCHECK:       __omp_offloading_58_208beb0_main_l83_debug___omp_outlined.exit.i:
; DRCHECK-NEXT:    call void @__kmpc_distribute_static_fini(ptr addrspacecast (ptr addrspace(1) @[[GLOB14]] to ptr), i32 [[TMP1]]) #[[ATTR1]], !noalias [[META41]]
; DRCHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_IS_LAST_I_I_I]]) #[[ATTR1]], !noalias [[META34]]
; DRCHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_STRIDE_I_I_I]]) #[[ATTR1]], !noalias [[META34]]
; DRCHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_COMB_UB_I_I_I]]) #[[ATTR1]], !noalias [[META34]]
; DRCHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) [[DOTOMP_COMB_LB_I_I_I]]) #[[ATTR1]], !noalias [[META34]]
; DRCHECK-NEXT:    call void @llvm.lifetime.end.p5(i64 32, ptr addrspace(5) [[CAPTURED_VARS_ADDRS_I_I_I]]), !noalias [[META31]]
; DRCHECK-NEXT:    call void @__kmpc_target_deinit() #[[ATTR1]]
; DRCHECK-NEXT:    br label [[__OMP_OFFLOADING_58_208BEB0_MAIN_L83_DEBUG___EXIT]]
; DRCHECK:       __omp_offloading_58_208beb0_main_l83_debug__.exit:
; DRCHECK-NEXT:    ret void
;
entry:
  %.omp.comb.lb.i.i.i = alloca i32, align 4, addrspace(5)
  %.omp.comb.ub.i.i.i = alloca i32, align 4, addrspace(5)
  %.omp.stride.i.i.i = alloca i32, align 4, addrspace(5)
  %.omp.is_last.i.i.i = alloca i32, align 4, addrspace(5)
  %captured_vars_addrs.i.i.i = alloca [4 x ptr], align 8, addrspace(5)
  %0 = tail call i32 @__kmpc_target_init(ptr addrspacecast (ptr addrspace(1) @__omp_offloading_58_208beb0_main_l83_kernel_environment to ptr)) #1, !noalias !36
  %exec_user_code.i = icmp eq i32 %0, -1
  br i1 %exec_user_code.i, label %user_code.entry.i, label %__omp_offloading_58_208beb0_main_l83_debug__.exit

user_code.entry.i:                                ; preds = %entry
  %1 = tail call i32 @__kmpc_global_thread_num(ptr addrspacecast (ptr addrspace(1) @15 to ptr)) #1, !noalias !36
  call void @llvm.lifetime.start.p5(i64 32, ptr addrspace(5) %captured_vars_addrs.i.i.i), !noalias !36
  %.omp.comb.lb.ascast.i.i.i = addrspacecast ptr addrspace(5) %.omp.comb.lb.i.i.i to ptr
  %.omp.comb.ub.ascast.i.i.i = addrspacecast ptr addrspace(5) %.omp.comb.ub.i.i.i to ptr
  %.omp.stride.ascast.i.i.i = addrspacecast ptr addrspace(5) %.omp.stride.i.i.i to ptr
  %.omp.is_last.ascast.i.i.i = addrspacecast ptr addrspace(5) %.omp.is_last.i.i.i to ptr
  %captured_vars_addrs.ascast.i.i.i = addrspacecast ptr addrspace(5) %captured_vars_addrs.i.i.i to ptr
  call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) %.omp.comb.lb.i.i.i) #7, !noalias !39
  store i32 0, ptr addrspace(5) %.omp.comb.lb.i.i.i, align 4, !tbaa !19, !noalias !39
  call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) %.omp.comb.ub.i.i.i) #7, !noalias !39
  store i32 1023, ptr addrspace(5) %.omp.comb.ub.i.i.i, align 4, !tbaa !19, !noalias !39
  call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) %.omp.stride.i.i.i) #7, !noalias !39
  store i32 1, ptr addrspace(5) %.omp.stride.i.i.i, align 4, !tbaa !19, !noalias !39
  call void @llvm.lifetime.start.p5(i64 4, ptr addrspace(5) %.omp.is_last.i.i.i) #7, !noalias !39
  store i32 0, ptr addrspace(5) %.omp.is_last.i.i.i, align 4, !tbaa !19, !noalias !39
  %nvptx_num_threads.i.i.i = tail call i32 @__kmpc_get_hardware_num_threads_in_block() #1, !noalias !39
  call void @__kmpc_distribute_static_init_4(ptr addrspacecast (ptr addrspace(1) @11 to ptr), i32 %1, i32 91, ptr nocapture nonnull %.omp.is_last.ascast.i.i.i, ptr nocapture nonnull %.omp.comb.lb.ascast.i.i.i, ptr nocapture nonnull %.omp.comb.ub.ascast.i.i.i, ptr nocapture nonnull %.omp.stride.ascast.i.i.i, i32 1, i32 %nvptx_num_threads.i.i.i) #1, !noalias !39
  %.omp.comb.lb.promoted.i.i.i = load i32, ptr addrspace(5) %.omp.comb.lb.i.i.i, align 4, !noalias !39
  %cmp22.i.i.i = icmp slt i32 %.omp.comb.lb.promoted.i.i.i, 1024
  br i1 %cmp22.i.i.i, label %omp.inner.for.body.lr.ph.i.i.i, label %__omp_offloading_58_208beb0_main_l83_debug___omp_outlined.exit.i

omp.inner.for.body.lr.ph.i.i.i:                   ; preds = %user_code.entry.i
  %kBatchSize.casted.sroa.0.0.insert.ext.i = and i64 %kBatchSize, 4294967295
  %2 = load i32, ptr addrspace(5) %.omp.comb.ub.i.i.i, align 4, !noalias !39
  %cond.i.i.i = tail call i32 @llvm.smin.i32(i32 %2, i32 1023), !range !43
  %3 = getelementptr inbounds [4 x ptr], ptr addrspace(5) %captured_vars_addrs.i.i.i, i32 0, i32 1
  %4 = getelementptr inbounds [4 x ptr], ptr addrspace(5) %captured_vars_addrs.i.i.i, i32 0, i32 2
  %5 = getelementptr inbounds [4 x ptr], ptr addrspace(5) %captured_vars_addrs.i.i.i, i32 0, i32 3
  %6 = inttoptr i64 %kBatchSize.casted.sroa.0.0.insert.ext.i to ptr
  %7 = load i32, ptr addrspace(5) %.omp.stride.i.i.i, align 4, !noalias !39
  br label %omp.inner.for.body.i.i.i

omp.inner.for.body.i.i.i:                         ; preds = %omp.inner.for.body.i.i.i, %omp.inner.for.body.lr.ph.i.i.i
  %storemerge4.i.i.i = phi i32 [ %cond.i.i.i, %omp.inner.for.body.lr.ph.i.i.i ], [ %cond9.i.i.i, %omp.inner.for.body.i.i.i ]
  %add313.i.i.i = phi i32 [ %.omp.comb.lb.promoted.i.i.i, %omp.inner.for.body.lr.ph.i.i.i ], [ %add3.i.i.i, %omp.inner.for.body.i.i.i ]
  %8 = zext i32 %add313.i.i.i to i64
  %9 = zext i32 %storemerge4.i.i.i to i64
  %10 = inttoptr i64 %8 to ptr
  store ptr %10, ptr addrspace(5) %captured_vars_addrs.i.i.i, align 8, !tbaa !31, !noalias !39
  %11 = inttoptr i64 %9 to ptr
  store ptr %11, ptr addrspace(5) %3, align 8, !tbaa !31, !noalias !39
  store ptr %d_batch_result, ptr addrspace(5) %4, align 8, !tbaa !31, !noalias !39
  store ptr %6, ptr addrspace(5) %5, align 8, !tbaa !31, !noalias !39
  call void @__kmpc_parallel_51(ptr addrspacecast (ptr addrspace(1) @15 to ptr), i32 %1, i32 1, i32 -1, i32 -1, ptr nonnull @__omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined, ptr null, ptr nonnull %captured_vars_addrs.ascast.i.i.i, i64 4) #1, !noalias !44
  %add3.i.i.i = add nsw i32 %add313.i.i.i, %7
  %add4.i.i.i = add nsw i32 %storemerge4.i.i.i, %7
  %cond9.i.i.i = call i32 @llvm.smin.i32(i32 %add4.i.i.i, i32 1023)
  %cmp2.i.i.i = icmp slt i32 %add3.i.i.i, 1024
  br i1 %cmp2.i.i.i, label %omp.inner.for.body.i.i.i, label %__omp_offloading_58_208beb0_main_l83_debug___omp_outlined.exit.i.loopexit

__omp_offloading_58_208beb0_main_l83_debug___omp_outlined.exit.i.loopexit: ; preds = %omp.inner.for.body.i.i.i
  br label %__omp_offloading_58_208beb0_main_l83_debug___omp_outlined.exit.i

__omp_offloading_58_208beb0_main_l83_debug___omp_outlined.exit.i: ; preds = %__omp_offloading_58_208beb0_main_l83_debug___omp_outlined.exit.i.loopexit, %user_code.entry.i
  call void @__kmpc_distribute_static_fini(ptr addrspacecast (ptr addrspace(1) @14 to ptr), i32 %1) #1, !noalias !44
  call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) %.omp.is_last.i.i.i) #1, !noalias !39
  call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) %.omp.stride.i.i.i) #1, !noalias !39
  call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) %.omp.comb.ub.i.i.i) #1, !noalias !39
  call void @llvm.lifetime.end.p5(i64 4, ptr addrspace(5) %.omp.comb.lb.i.i.i) #1, !noalias !39
  call void @llvm.lifetime.end.p5(i64 32, ptr addrspace(5) %captured_vars_addrs.i.i.i), !noalias !36
  call void @__kmpc_target_deinit() #1
  br label %__omp_offloading_58_208beb0_main_l83_debug__.exit

__omp_offloading_58_208beb0_main_l83_debug__.exit: ; preds = %entry, %__omp_offloading_58_208beb0_main_l83_debug___omp_outlined.exit.i
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.assign(metadata, metadata, metadata, metadata, metadata, metadata) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umin.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.experimental.noalias.scope.decl(metadata) #6

attributes #0 = { nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #1 = { nounwind }
attributes #2 = { alwaysinline norecurse nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot10-insts,+dot2-insts,+dot7-insts,+dpp,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+wavefrontsize64" }
attributes #3 = { alwaysinline }
attributes #4 = { alwaysinline norecurse nounwind "amdgpu-flat-work-group-size"="1,256" "kernel" "no-trapping-math"="true" "omp_target_thread_limit"="256" "stack-protector-buffer-size"="8" "target-cpu"="gfx906" "target-features"="+16-bit-insts,+ci-insts,+dl-insts,+dot1-insts,+dot10-insts,+dot2-insts,+dot7-insts,+dpp,+gfx8-insts,+gfx9-insts,+s-memrealtime,+s-memtime-inst,+wavefrontsize64" "uniform-work-group-size"="true" }
attributes #5 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #6 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #7 = { nounwind memory(readwrite) }

!omp_offload.info = !{!0, !1}
!llvm.module.flags = !{!4, !5, !6, !7, !8, !9, !10, !11, !12}
!opencl.ocl.version = !{!13}
!llvm.ident = !{!14, !15}

!0 = !{i32 0, i32 88, i32 34127536, !"_Z2gaPKcS0_Pcjiiii", i32 18, i32 0, i32 0}
!1 = !{i32 0, i32 88, i32 34127536, !"main", i32 83, i32 0, i32 1}
!4 = !{i32 1, !"amdgpu_code_object_version", i32 400}
!5 = !{i32 7, !"Dwarf Version", i32 5}
!6 = !{i32 2, !"Debug Info Version", i32 3}
!7 = !{i32 1, !"wchar_size", i32 4}
!8 = !{i32 7, !"openmp", i32 51}
!9 = !{i32 7, !"openmp-device", i32 51}
!10 = !{i32 8, !"PIC Level", i32 2}
!11 = !{i32 4, !"amdgpu_hostcall", i32 1}
!12 = !{i32 7, !"debug-info-assignment-tracking", i1 true}
!13 = !{i32 2, i32 0}
!14 = !{!"clang version 18.0.0 (git@github.com:ivanradanov/llvm-project2.git 278669556b5ac45d940df0c07c17b953317ad1c4)"}
!15 = !{!"AMD clang version 17.0.0 (https://github.com/RadeonOpenCompute/llvm-project roc-5.7.0 23352 d1e13c532a947d0cbfc94759c00dcf152294aa13)"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"__omp_offloading_58_208beb0__Z2gaPKcS0_Pcjiiii_l18_debug___omp_outlined_debug___omp_outlined_debug__: %.global_tid."}
!18 = distinct !{!18, !"__omp_offloading_58_208beb0__Z2gaPKcS0_Pcjiiii_l18_debug___omp_outlined_debug___omp_outlined_debug__"}
!19 = !{!20, !20, i64 0}
!20 = !{!"int", !21, i64 0}
!21 = !{!"omnipotent char", !22, i64 0}
!22 = !{!"Simple C++ TBAA"}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.mustprogress"}
!25 = !{!21, !21, i64 0}
!26 = distinct !{!26, !24}
!27 = !{!28}
!28 = distinct !{!28, !29, !"__omp_offloading_58_208beb0__Z2gaPKcS0_Pcjiiii_l18_debug___omp_outlined_debug__: %.global_tid."}
!29 = distinct !{!29, !"__omp_offloading_58_208beb0__Z2gaPKcS0_Pcjiiii_l18_debug___omp_outlined_debug__"}
!30 = !{i32 0, i32 -1}
!31 = !{!32, !32, i64 0}
!32 = !{!"any pointer", !21, i64 0}
!33 = !{!34}
!34 = distinct !{!34, !35, !"__omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined_debug__: %d_batch_result"}
!35 = distinct !{!35, !"__omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug___omp_outlined_debug__"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"__omp_offloading_58_208beb0_main_l83_debug__: %d_batch_result"}
!38 = distinct !{!38, !"__omp_offloading_58_208beb0_main_l83_debug__"}
!39 = !{!40, !42, !37}
!40 = distinct !{!40, !41, !"__omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug__: %.global_tid."}
!41 = distinct !{!41, !"__omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug__"}
!42 = distinct !{!42, !41, !"__omp_offloading_58_208beb0_main_l83_debug___omp_outlined_debug__: %d_batch_result"}
!43 = !{i32 -2147483648, i32 1024}
!44 = !{!40}
!45 = distinct !{!45, !46}
!46 = !{!"llvm.loop.unroll_and_interleave.count", i32 2}
